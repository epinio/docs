"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[22243],{3905:function(e,n,t){t.d(n,{Zo:function(){return a},kt:function(){return d}});var o=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},a=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,a=p(e,["components","mdxType","originalType","parentName"]),m=s(t),d=i,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||r;return t?o.createElement(f,l(l({ref:n},a),{},{components:t})):o.createElement(f,l({ref:n},a))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=m;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:i,l[1]=p;for(var s=2;s<r;s++)l[s]=t[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},38713:function(e,n,t){t.r(n),t.d(n,{assets:function(){return a},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return u}});var o=t(83117),i=t(80102),r=(t(67294),t(3905)),l=["components"],p={sidebar_label:"epinio completion",title:"",description:"epinio completion",keywords:["epinio","kubernetes","epinio completion"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-completion"],"doc-persona":["epinio-developer","epinio-operator"]},c=void 0,s={unversionedId:"references/commands/cli/epinio_completion",id:"references/commands/cli/epinio_completion",title:"",description:"epinio completion",source:"@site/docs/references/commands/cli/epinio_completion.md",sourceDirName:"references/commands/cli",slug:"/references/commands/cli/epinio_completion",permalink:"/next/references/commands/cli/epinio_completion",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/references/commands/cli/epinio_completion.md",tags:[],version:"current",frontMatter:{sidebar_label:"epinio completion",title:"",description:"epinio completion",keywords:["epinio","kubernetes","epinio completion"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-completion"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"epinio client-sync",permalink:"/next/references/commands/cli/epinio_client-sync"},next:{title:"epinio export-registries",permalink:"/next/references/commands/cli/epinio_export-registries"}},a={},u=[{value:"epinio completion",id:"epinio-completion",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Bash",id:"bash",level:4},{value:"Zsh",id:"zsh",level:4},{value:"Fish",id:"fish",level:4},{value:"Powershell",id:"powershell",level:4},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],m={toc:u};function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"epinio-completion"},"epinio completion"),(0,r.kt)("p",null,"Generate completion script for a shell"),(0,r.kt)("h3",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"To load completions:"),(0,r.kt)("h4",{id:"bash"},"Bash"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ source <(epinio completion bash)\n")),(0,r.kt)("p",null,"To load completions for each session, execute once:"),(0,r.kt)("p",null,"Linux:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ epinio completion bash > /etc/bash_completion.d/epinio\n")),(0,r.kt)("p",null,"MacOS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ epinio completion bash > /usr/local/etc/bash_completion.d/epinio\n")),(0,r.kt)("p",null,"ATTENTION:\nThe generated script requires the bash-completion package.\nSee ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/#enabling-shell-autocompletion"},"https://kubernetes.io/docs/tasks/tools/install-kubectl/#enabling-shell-autocompletion"),"\nfor information on how to install and activate it."),(0,r.kt)("h4",{id:"zsh"},"Zsh"),(0,r.kt)("p",null,"If shell completion is not already enabled in your environment you will need to enable it.  You can execute the following once:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ echo "autoload -U compinit; compinit" >> ~/.zshrc\n')),(0,r.kt)("p",null,"To load completions for each session, execute once:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ epinio completion zsh > "${fpath[1]}/_epinio"\n')),(0,r.kt)("p",null,"You will need to start a new shell for this setup to take effect."),(0,r.kt)("h4",{id:"fish"},"Fish"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ epinio completion fish | source\n")),(0,r.kt)("p",null,"To load completions for each session, execute once:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ epinio completion fish > ~/.config/fish/completions/epinio.fish\n")),(0,r.kt)("h4",{id:"powershell"},"Powershell"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"PS> epinio completion powershell | Out-String | Invoke-Expression\n")),(0,r.kt)("p",null,"To load completions for every new session, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"PS> epinio completion powershell > epinio.ps1\n")),(0,r.kt)("p",null,"and source this file from your powershell profile."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"epinio completion [bash|zsh|fish|powershell]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -h, --help   help for completion\n")),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  -H, --header stringArray       Add custom header to every request executed\n  -c, --kubeconfig string        (KUBECONFIG) path to a kubeconfig, not required in-cluster\n      --no-colors                Suppress colorized output\n      --settings-file string     (EPINIO_SETTINGS) set path of settings file (default "~/.config/epinio/settings.yaml")\n      --skip-ssl-verification    (SKIP_SSL_VERIFICATION) Skip the verification of TLS certificates\n      --timeout-multiplier int   (EPINIO_TIMEOUT_MULTIPLIER) Multiply timeouts by this factor (default 1)\n      --trace-file string        (TRACE_FILE) Print trace messages to the specified file\n      --trace-level int          (TRACE_LEVEL) Only print trace messages at or above this level (0 to 255, default 0, print nothing)\n      --trace-output string      (TRACE_OUTPUT) Sets trace output format [text,json] (default "text")\n      --verbosity int            (VERBOSITY) Only print progress messages at or above this level (0 or 1, default 0)\n')),(0,r.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/references/commands/cli/epinio"},"epinio"),"\t - Epinio cli")))}d.isMDXComponent=!0}}]);