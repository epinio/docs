"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[59270],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,a(a({ref:t},l),{},{components:n})):r.createElement(h,a({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},57671:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(83117),i=n(80102),o=(n(67294),n(3905)),a=["components"],s={sidebar_label:"Setting Up An Export Destination Registry",sidebar_position:8,title:""},p=void 0,c={unversionedId:"howtos/customization/setup_export_registry",id:"version-1.10.0/howtos/customization/setup_export_registry",title:"",description:"Do not confuse this topic with external Epinio registries.",source:"@site/versioned_docs/version-1.10.0/howtos/customization/setup_export_registry.md",sourceDirName:"howtos/customization",slug:"/howtos/customization/setup_export_registry",permalink:"/1.10.0/howtos/customization/setup_export_registry",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.10.0/howtos/customization/setup_export_registry.md",tags:[],version:"1.10.0",sidebarPosition:8,frontMatter:{sidebar_label:"Setting Up An Export Destination Registry",sidebar_position:8,title:""},sidebar:"docs",previous:{title:"Exporting applications to an OCI registry",permalink:"/1.10.0/howtos/customization/export_to_oci_registries"},next:{title:"Setting Up An External Container Registry",permalink:"/1.10.0/howtos/customization/setup_external_registry"}},l={},u=[{value:"How to set up a basic export destination registry",id:"how-to-set-up-a-basic-export-destination-registry",level:2},{value:"Certificate secrets",id:"certificate-secrets",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Do not confuse this topic with external Epinio registries.\nThese are where Epinio saves the images of staged applications for its own use.\nSee ",(0,o.kt)("a",{parentName:"p",href:"/1.10.0/howtos/customization/setup_external_registry"},"Setting Up An External Container Registry")," for more information."),(0,o.kt)("p",{parentName:"admonition"},"Export destination registries on the other hand are where a user saves active applications to,\nfor pickup by and use with ",(0,o.kt)("inlineCode",{parentName:"p"},"helm")," and other kubernetes tools."),(0,o.kt)("p",{parentName:"admonition"},"It does not help that it is perfectly ok to configure the same registry both as external registry\nand as export target.")),(0,o.kt)("h2",{id:"how-to-set-up-a-basic-export-destination-registry"},"How to set up a basic export destination registry"),(0,o.kt)("p",null,"As an operator, replace the bracketed (",(0,o.kt)("inlineCode",{parentName:"p"},"<...>"),") placeholders in the command below, and then invoke it"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl apply -f - <<EOF\n---\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  annotations:\n    epinio.io/registry-namespace: "<registry-org>"\n  labels:\n    epinio.io/api-export-registry: "true"\n  name: "<destination-name>"\n  namespace: epinio\nstringData:\n  # certs: "<name of cert secret>"\n  .dockerconfigjson: |-\n    {\n      "auths": {\n        "registry.hub.docker.com": {\n          "auth":"PHVzZXI+OjxwYXNzd29yZD4=",\n          "username":"<user>",\n          "password":"<password>"\n        }\n      }\n    }\nEOF\n')),(0,o.kt)("p",null,"Note that the ",(0,o.kt)("inlineCode",{parentName:"p"},"auth")," element is derived from username and password.\nIt has to be replaced as well.\nIts value is the base64 encoding of ",(0,o.kt)("inlineCode",{parentName:"p"},"<user>:<password>"),"."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"An easy way to create the desired value is:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},'echo -n "<user>:<password>" | base64 -\n')),(0,o.kt)("p",{parentName:"admonition"},"Note the ",(0,o.kt)("inlineCode",{parentName:"p"},"-n")," flag of ",(0,o.kt)("inlineCode",{parentName:"p"},"echo"),".\nWithout it a trailing newline will be added, creating a bogus result.")),(0,o.kt)("p",null,"This creates the authentication secret for the destination, in the ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio")," namespace.\nChange it, if ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio")," is not Epinio's system namespace, i.e. when Epinio was installed differently."),(0,o.kt)("p",null,"Epinio now knows the specified account at the docker hub as an export destination for use with\n",(0,o.kt)("inlineCode",{parentName:"p"},"epinio app export --registry"),"."),(0,o.kt)("p",null,"For other registries change the ",(0,o.kt)("inlineCode",{parentName:"p"},"registry.hub.docker.com")," reference as well."),(0,o.kt)("h2",{id:"certificate-secrets"},"Certificate secrets"),(0,o.kt)("p",null,"If the desired registry requires additional TLS certificates to talk it is necessary to"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create a kubernetes secret with key ",(0,o.kt)("inlineCode",{parentName:"p"},"tls.crt")," whose value is the set of additional certifcates in\nPEM-encoded form."),(0,o.kt)("p",{parentName:"li"},"This secret has to reside in the same namespace as the authentication secret, i.e. Epinio's\nsystem namespace. That namespace usually is ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio"),"."),(0,o.kt)("p",{parentName:"li"},"For example:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"kubectl create secret generic \\\n    --namespace epinio \\\n    --from-file=tls.crt=tls-registry.pem \\\n    export-registry\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Extend the authentication secret with a key ",(0,o.kt)("inlineCode",{parentName:"p"},"certs")," (sibling to key ",(0,o.kt)("inlineCode",{parentName:"p"},".dockerconfigjson"),") whose\nvalue is the name of the secret created in the preceding step."))))}m.isMDXComponent=!0}}]);