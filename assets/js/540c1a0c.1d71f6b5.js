"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[42614],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=i.createContext({}),p=function(e){var t=i.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(a.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),g=o,u=d["".concat(a,".").concat(g)]||d[g]||f[g]||r;return n?i.createElement(u,c(c({ref:t},s),{},{components:n})):i.createElement(u,c({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,c=new Array(r);c[0]=d;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var p=2;p<r;p++)c[p]=n[p];return i.createElement.apply(null,c)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59189:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return a},default:function(){return g},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return f}});var i=n(83117),o=n(80102),r=(n(67294),n(3905)),c=["components"],l={sidebar_label:"epinio gitconfig delete",title:"",description:"epinio gitconfig delete",keywords:["epinio","kubernetes","epinio gitconfig delete"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-gitconfig-delete"],"doc-persona":["epinio-developer","epinio-operator"]},a=void 0,p={unversionedId:"references/commands/cli/gitconfig/epinio_gitconfig_delete",id:"version-1.11.0/references/commands/cli/gitconfig/epinio_gitconfig_delete",title:"",description:"epinio gitconfig delete",source:"@site/versioned_docs/version-1.11.0/references/commands/cli/gitconfig/epinio_gitconfig_delete.md",sourceDirName:"references/commands/cli/gitconfig",slug:"/references/commands/cli/gitconfig/epinio_gitconfig_delete",permalink:"/references/commands/cli/gitconfig/epinio_gitconfig_delete",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.11.0/references/commands/cli/gitconfig/epinio_gitconfig_delete.md",tags:[],version:"1.11.0",frontMatter:{sidebar_label:"epinio gitconfig delete",title:"",description:"epinio gitconfig delete",keywords:["epinio","kubernetes","epinio gitconfig delete"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-gitconfig-delete"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"epinio gitconfig create",permalink:"/references/commands/cli/gitconfig/epinio_gitconfig_create"},next:{title:"epinio gitconfig list",permalink:"/references/commands/cli/gitconfig/epinio_gitconfig_list"}},s={},f=[{value:"epinio gitconfig delete",id:"epinio-gitconfig-delete",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],d={toc:f};function g(e){var t=e.components,n=(0,o.Z)(e,c);return(0,r.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"epinio-gitconfig-delete"},"epinio gitconfig delete"),(0,r.kt)("p",null,"Delete git configurations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"epinio gitconfig delete NAME [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      --all    delete all git configurations\n  -h, --help   help for delete\n")),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  -H, --header stringArray       Add custom header to every request executed\n  -c, --kubeconfig string        (KUBECONFIG) path to a kubeconfig, not required in-cluster\n      --no-colors                Suppress colorized output\n      --settings-file string     (EPINIO_SETTINGS) set path of settings file (default "~/.config/epinio/settings.yaml")\n      --skip-ssl-verification    (SKIP_SSL_VERIFICATION) Skip the verification of TLS certificates\n      --timeout-multiplier int   (EPINIO_TIMEOUT_MULTIPLIER) Multiply timeouts by this factor (default 1)\n      --trace-file string        (TRACE_FILE) Print trace messages to the specified file\n      --trace-level int          (TRACE_LEVEL) Only print trace messages at or above this level (0 to 255, default 0, print nothing)\n      --trace-output string      (TRACE_OUTPUT) Sets trace output format [text,json] (default "text")\n      --verbosity int            (VERBOSITY) Only print progress messages at or above this level (0 or 1, default 0)\n')),(0,r.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/commands/cli/gitconfig/epinio_gitconfig"},"epinio gitconfig"),"\t - Epinio git configuration management")))}g.isMDXComponent=!0}}]);