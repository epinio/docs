"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[18722],{3905:function(e,t,i){i.d(t,{Zo:function(){return p},kt:function(){return d}});var r=i(67294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,r,n=function(e,t){if(null==e)return{};var i,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)i=o[r],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)i=o[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=r.createContext({}),a=function(e){var t=r.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},p=function(e){var t=a(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var i=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=a(i),d=n,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||o;return i?r.createElement(m,s(s({ref:t},p),{},{components:i})):r.createElement(m,s({ref:t},p))}));function d(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=i.length,s=new Array(o);s[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var a=2;a<o;a++)s[a]=i[a];return r.createElement.apply(null,s)}return r.createElement.apply(null,i)}f.displayName="MDXCreateElement"},13755:function(e,t,i){i.r(t),i.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return a},toc:function(){return u}});var r=i(83117),n=i(80102),o=(i(67294),i(3905)),s=["components"],c={sidebar_label:"epinio service list",title:"",description:"epinio service list",keywords:["epinio","kubernetes","epinio service list"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-service-list"],"doc-persona":["epinio-developer","epinio-operator"]},l=void 0,a={unversionedId:"references/commands/cli/service/epinio_service_list",id:"references/commands/cli/service/epinio_service_list",title:"",description:"epinio service list",source:"@site/docs/references/commands/cli/service/epinio_service_list.md",sourceDirName:"references/commands/cli/service",slug:"/references/commands/cli/service/epinio_service_list",permalink:"/next/references/commands/cli/service/epinio_service_list",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/references/commands/cli/service/epinio_service_list.md",tags:[],version:"current",frontMatter:{sidebar_label:"epinio service list",title:"",description:"epinio service list",keywords:["epinio","kubernetes","epinio service list"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-service-list"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"epinio service delete",permalink:"/next/references/commands/cli/service/epinio_service_delete"},next:{title:"epinio service port-forward",permalink:"/next/references/commands/cli/service/epinio_service_port-forward"}},p={},u=[{value:"epinio service list",id:"epinio-service-list",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],f={toc:u};function d(e){var t=e.components,i=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"epinio-service-list"},"epinio service list"),(0,o.kt)("p",null,"List all the services in the targeted namespace"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"epinio service list [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --all             List all services\n  -h, --help            help for list\n  -o, --output string   sets output format [text|json] (default "text")\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -H, --header stringArray       Add custom header to every request executed\n  -c, --kubeconfig string        (KUBECONFIG) path to a kubeconfig, not required in-cluster\n      --no-colors                Suppress colorized output\n      --settings-file string     (EPINIO_SETTINGS) set path of settings file (default "~/.config/epinio/settings.yaml")\n      --skip-ssl-verification    (SKIP_SSL_VERIFICATION) Skip the verification of TLS certificates\n      --timeout-multiplier int   (EPINIO_TIMEOUT_MULTIPLIER) Multiply timeouts by this factor (default 1)\n      --trace-file string        (TRACE_FILE) Print trace messages to the specified file\n      --trace-level int          (TRACE_LEVEL) Only print trace messages at or above this level (0 to 255, default 0, print nothing)\n      --trace-output string      (TRACE_OUTPUT) Sets trace output format [text,json] (default "text")\n      --verbosity int            (VERBOSITY) Only print progress messages at or above this level (0 or 1, default 0)\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service"},"epinio service"),"\t - Epinio service management")))}d.isMDXComponent=!0}}]);