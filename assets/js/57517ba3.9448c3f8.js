"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[61625],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),d=l,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var u=2;u<o;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},86014:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return v},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var a,l=n(83117),o=n(80102),r=(n(67294),n(3905)),i=["components"],s={sidebar_label:"How To Specify Custom values for Service Helm Charts",sidebar_position:17,title:""},u="Audience",p={unversionedId:"howtos/using_custom_service_values",id:"howtos/using_custom_service_values",title:"",description:"This documented is addressed to operators specifying custom services for users, and to the users",source:"@site/docs/howtos/using_custom_service_values.md",sourceDirName:"howtos",slug:"/howtos/using_custom_service_values",permalink:"/next/howtos/using_custom_service_values",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/howtos/using_custom_service_values.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_label:"How To Specify Custom values for Service Helm Charts",sidebar_position:17,title:""},sidebar:"docs",previous:{title:"Installing Epinio On Rancher",permalink:"/next/howtos/install_epinio_on_rancher"},next:{title:"Installing Epinio On Rancher Desktop (local)",permalink:"/next/howtos/install_epinio_on_rancher_desktop"}},m={},c=[{value:"Basic map, simple value",id:"basic-map-simple-value",level:2},{value:"Basic array, simple value",id:"basic-array-simple-value",level:2},{value:"Mixed map and array, simple values",id:"mixed-map-and-array-simple-values",level:2},{value:"Map-valued map",id:"map-valued-map",level:2}],d=(a="CodeBlock",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),h={toc:c};function v(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,l.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"audience"},"Audience"),(0,r.kt)("p",null,"This documented is addressed to operators specifying custom services for users, and to the users\ncreating instances of such custom services and wishing to customize these based on the user settings\nthe operators gave them."),(0,r.kt)("p",null,"Operators are taught how to specify user settings based on the form of the field in the\n",(0,r.kt)("inlineCode",{parentName:"p"},"values.yaml")," file of the underlying service helm chart."),(0,r.kt)("p",null,"Users are taught how to set values for the user settings of a service."),(0,r.kt)("h1",{id:"general-information"},"General information"),(0,r.kt)("p",null,"For operators, see ",(0,r.kt)("a",{parentName:"p",href:"/next/howtos/create_custom_service"},"Creating A Custom Service")," for the general syntax of\nuser settings."),(0,r.kt)("p",null,"For users, the relevant option is ",(0,r.kt)("inlineCode",{parentName:"p"},"--chart-value")," (short: ",(0,r.kt)("inlineCode",{parentName:"p"},"-v"),") of the ",(0,r.kt)("inlineCode",{parentName:"p"},"epinio service create"),"\ncommand."),(0,r.kt)("p",null,"The rest of this document is a series of examples explaining how the various forms of helm chart\nvalues have to be specified in the custom service and then used via ",(0,r.kt)("inlineCode",{parentName:"p"},"--chart-value"),"."),(0,r.kt)("h1",{id:"examples"},"Examples"),(0,r.kt)("p",null,"All the examples have the same basic structure. A 3-column table is used to show"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"how the field looks like in the ",(0,r.kt)("inlineCode",{parentName:"li"},"values.yaml")," of the underlying service,"),(0,r.kt)("li",{parentName:"ul"},"how the field is specified in the custom service, and"),(0,r.kt)("li",{parentName:"ul"},"how it is addressed by the user via ",(0,r.kt)("inlineCode",{parentName:"li"},"--chart-value"),".")),(0,r.kt)("p",null,"side by side. The table may be preceded by notes specific to the example."),(0,r.kt)("h2",{id:"basic-map-simple-value"},"Basic map, simple value"),(0,r.kt)("p",null,"This example assumes that the field value is of a simple type ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"integer"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"bool"),"."),(0,r.kt)("pre",null,(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,(0,r.kt)("code",null,"values.yaml")),(0,r.kt)("th",null,"Service spec"),(0,r.kt)("th",null,"Use")),(0,r.kt)("tr",{valign:"top"},(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},"foo:\n  bar: value\n")),(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},'settings:\n  "foo.bar":\n    type: "T"\n')),(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},'-v "foo.bar=value"'))))),(0,r.kt)("h2",{id:"basic-array-simple-value"},"Basic array, simple value"),(0,r.kt)("p",null,"This example assumes that the field value is of a simple type ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"integer"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"bool"),"."),(0,r.kt)("p",null,"Note how the name of the field in the spec does not mention the nature of ",(0,r.kt)("inlineCode",{parentName:"p"},"bar")," as an array.  The\nname is essentially the spine to reach the field, regardless of intercalated arrays.  This may not\nbe fully understood here, however the next example should make it clearer."),(0,r.kt)("pre",null,(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,(0,r.kt)("code",null,"values.yaml")),(0,r.kt)("th",null,"Service spec"),(0,r.kt)("th",null,"Use")),(0,r.kt)("tr",{valign:"top"},(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},"foo:\n  bar:\n    - value1\n    - value2\n    - ...\n")),(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},'settings:\n  "foo.bar":\n    type: "T"\n')),(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},'-v "foo.bar[0]=value1"\n-v "foo.bar[1]=value2"\n...\n'))))),(0,r.kt)("h2",{id:"mixed-map-and-array-simple-values"},"Mixed map and array, simple values"),(0,r.kt)("p",null,"This example assumes that the value field is a simple type ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),", i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"integer"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"bool"),"."),(0,r.kt)("p",null,"Here ",(0,r.kt)("inlineCode",{parentName:"p"},"foo")," is the array, having maps as elements, of which the keys ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," are of\ninterest."),(0,r.kt)("p",null,"Note how the names of the field do not mention the nature of ",(0,r.kt)("inlineCode",{parentName:"p"},"foo")," as an array, and how the spines\nto the fields of interest are used to name them in the settings."),(0,r.kt)("pre",null,(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,(0,r.kt)("code",null,"values.yaml")),(0,r.kt)("th",null,"Service spec"),(0,r.kt)("th",null,"Use")),(0,r.kt)("tr",{valign:"top"},(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},"foo:\n  - name: name1\n    value: value1\n  - name: name2\n    value: value2\n  - ...\n")),(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},'settings:\n  "foo.name":\n    type: "string"\n  "foo.value":\n    type: "T"\n')),(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},'-v "foo[0].name=name1"\n-v "foo[0].value=value1"\n-v "foo[1].name=name2"\n-v "foo[1].value=value2"\n...\n'))))),(0,r.kt)("h2",{id:"map-valued-map"},"Map-valued map"),(0,r.kt)("p",null,"This example assumes that the field value is actually a map itself, with arbitrary keys, and\nvalues. A more concrete example would be the various annotation fields provided by various bitnami\nservices enabling the user to set custom annotations on the various groups of pods of the service."),(0,r.kt)("pre",null,(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,(0,r.kt)("code",null,"values.yaml")),(0,r.kt)("th",null,"Service spec"),(0,r.kt)("th",null,"Use")),(0,r.kt)("tr",{valign:"top"},(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},"foo:\n  bar:\n    key1: value1\n    key2: value2\n    ...\n")),(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},'settings:\n  "foo.bar":\n    type: "map"\n')),(0,r.kt)("td",null,(0,r.kt)(d,{language:"yaml",showLineNumbers:!0,mdxType:"CodeBlock"},'-v "foo.bar.key1=value1\n-v "foo.bar.key2=value2\n...\n'))))))}v.isMDXComponent=!0}}]);