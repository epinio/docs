"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[22819],{3905:function(e,i,r){r.d(i,{Zo:function(){return l},kt:function(){return d}});var n=r(67294);function t(e,i,r){return i in e?Object.defineProperty(e,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[i]=r,e}function o(e,i){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);i&&(n=n.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var i=1;i<arguments.length;i++){var r=null!=arguments[i]?arguments[i]:{};i%2?o(Object(r),!0).forEach((function(i){t(e,i,r[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(r,i))}))}return e}function s(e,i){if(null==e)return{};var r,n,t=function(e,i){if(null==e)return{};var r,n,t={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],i.indexOf(r)>=0||(t[r]=e[r]);return t}(e,i);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],i.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var a=n.createContext({}),p=function(e){var i=n.useContext(a),r=i;return e&&(r="function"==typeof e?e(i):c(c({},i),e)),r},l=function(e){var i=p(e.components);return n.createElement(a.Provider,{value:i},e.children)},m={inlineCode:"code",wrapper:function(e){var i=e.children;return n.createElement(n.Fragment,{},i)}},u=n.forwardRef((function(e,i){var r=e.components,t=e.mdxType,o=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=t,f=u["".concat(a,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(f,c(c({ref:i},l),{},{components:r})):n.createElement(f,c({ref:i},l))}));function d(e,i){var r=arguments,t=i&&i.mdxType;if("string"==typeof e||t){var o=r.length,c=new Array(o);c[0]=u;var s={};for(var a in i)hasOwnProperty.call(i,a)&&(s[a]=i[a]);s.originalType=e,s.mdxType="string"==typeof e?e:t,c[1]=s;for(var p=2;p<o;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},73570:function(e,i,r){r.r(i),r.d(i,{assets:function(){return l},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var n=r(83117),t=r(80102),o=(r(67294),r(3905)),c=["components"],s={sidebar_label:"epinio service",title:"",description:"epinio service",keywords:["epinio","kubernetes","epinio service"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-service"],"doc-persona":["epinio-developer","epinio-operator"]},a=void 0,p={unversionedId:"references/commands/cli/service/epinio_service",id:"references/commands/cli/service/epinio_service",title:"",description:"epinio service",source:"@site/docs/references/commands/cli/service/epinio_service.md",sourceDirName:"references/commands/cli/service",slug:"/references/commands/cli/service/epinio_service",permalink:"/next/references/commands/cli/service/epinio_service",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/references/commands/cli/service/epinio_service.md",tags:[],version:"current",frontMatter:{sidebar_label:"epinio service",title:"",description:"epinio service",keywords:["epinio","kubernetes","epinio service"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-service"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"epinio namespace show",permalink:"/next/references/commands/cli/namespace/epinio_namespace_show"},next:{title:"epinio service bind",permalink:"/next/references/commands/cli/service/epinio_service_bind"}},l={},m=[{value:"epinio service",id:"epinio-service",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:m};function d(e){var i=e.components,r=(0,t.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:i,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"epinio-service"},"epinio service"),(0,o.kt)("p",null,"Epinio service management"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Manage the epinio services"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"epinio service [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help   help for service\n")),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -H, --header stringArray       Add custom header to every request executed\n  -c, --kubeconfig string        (KUBECONFIG) path to a kubeconfig, not required in-cluster\n      --no-colors                Suppress colorized output\n      --settings-file string     (EPINIO_SETTINGS) set path of settings file (default "~/.config/epinio/settings.yaml")\n      --skip-ssl-verification    (SKIP_SSL_VERIFICATION) Skip the verification of TLS certificates\n      --timeout-multiplier int   (EPINIO_TIMEOUT_MULTIPLIER) Multiply timeouts by this factor (default 1)\n      --trace-file string        (TRACE_FILE) Print trace messages to the specified file\n      --trace-level int          (TRACE_LEVEL) Only print trace messages at or above this level (0 to 255, default 0, print nothing)\n      --trace-output string      (TRACE_OUTPUT) Sets trace output format [text,json] (default "text")\n      --verbosity int            (VERBOSITY) Only print progress messages at or above this level (0 or 1, default 0)\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/epinio"},"epinio"),"\t - Epinio cli"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_bind"},"epinio service bind"),"\t - Bind a service SERVICENAME to an Epinio app APPNAME"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_catalog"},"epinio service catalog"),"\t - Lists all available Epinio catalog services, or show the details of the specified one"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_create"},"epinio service create"),"\t - Create a service SERVICENAME of an Epinio catalog service CATALOGSERVICENAME"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_delete"},"epinio service delete"),"\t - Delete one or more services"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_list"},"epinio service list"),"\t - List all the services in the targeted namespace"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_port-forward"},"epinio service port-forward"),"\t - forward one or more local ports to a service SERVICENAME"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_show"},"epinio service show"),"\t - Show details of a service SERVICENAME"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_unbind"},"epinio service unbind"),"\t - Unbinds a service SERVICENAME from an Epinio app APPNAME"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/next/references/commands/cli/service/epinio_service_update"},"epinio service update"),"\t - Update a service")))}d.isMDXComponent=!0}}]);