"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[31731],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(m,a(a({ref:t},l),{},{components:n})):i.createElement(m,a({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},26246:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var i=n(83117),r=n(80102),o=(n(67294),n(3905)),a=["components"],s={sidebar_label:"Security",title:"Epinio security",description:"Epinio security, concepts and context",keywords:["epinio","kubernetes","security","application development"]},c=void 0,p={unversionedId:"explanations/security",id:"explanations/security",title:"Epinio security",description:"Epinio security, concepts and context",source:"@site/docs/explanations/security.md",sourceDirName:"explanations",slug:"/explanations/security",permalink:"/next/explanations/security",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/explanations/security.md",tags:[],version:"current",frontMatter:{sidebar_label:"Security",title:"Epinio security",description:"Epinio security, concepts and context",keywords:["epinio","kubernetes","security","application development"]},sidebar:"docs",previous:{title:"Principles",permalink:"/next/explanations/principles"},next:{title:"Contributing to Epinio",permalink:"/next/howtos/contribute"}},l={},u=[{value:"OpenID Connect (OIDC)",id:"openid-connect-oidc",level:3},{value:"Cosign and Epinio images",id:"cosign-and-epinio-images",level:3}],d={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Epinio secures access to its API with TLS and basic authentication."),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio login [URL]")," command after installation to save the necessary credentials (user, password) and certificates.\nEpinio stores credentials in its settings for use by other Epinio commands requiring them."),(0,o.kt)("p",null,"For a trial deployment the underlying cluster generates a certificate securing the API.\nIt's a self-signed certificate, and its certificate authority certificate is stored in the settings for verification."),(0,o.kt)("p",null,"For a production deployment,\nwith a domain specified (",(0,o.kt)("inlineCode",{parentName:"p"},"--set global.domain=..."),",\nwhen installing the chart),\nthe certificate is obtained from ",(0,o.kt)("a",{parentName:"p",href:"https://letsencrypt.org/"},"Let's Encrypt"),".\nCredential storage in settings isn't necessary as Let's Encrypt is a known CA."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Read more on how to use Let's Encrypt with Epinio in the ",(0,o.kt)("a",{parentName:"p",href:"/next/howtos/other/certificate_issuers"},"certificate issuers")," documentation.")),(0,o.kt)("p",null,"Kubernetes accesses the Epinio registry (TLS or not) differently depending on installation flags.\nThere is more detail in the ",(0,o.kt)("a",{parentName:"p",href:"/next/explanations/advanced#container-registry"},"Epinio registry")," documentation."),(0,o.kt)("h3",{id:"openid-connect-oidc"},"OpenID Connect (OIDC)"),(0,o.kt)("p",null,"Since version ",(0,o.kt)("strong",{parentName:"p"},"1.3.0"),", Epinio has integrated ",(0,o.kt)("a",{parentName:"p",href:"https://dexidp.io/"},"Dex"),"\nas an identity provider which adds the support for external OIDC providers."),(0,o.kt)("p",null,"To authenticate through Dex, you use the login command with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--oidc")," flag.\nThis opens a web page where you can authenticate with the configured provider."),(0,o.kt)("h3",{id:"cosign-and-epinio-images"},"Cosign and Epinio images"),(0,o.kt)("p",null,"We use Cosign to sign the Epinio images, rather than signing all individual release assets.\nYou can use Cosign to check the images, following download.\nThere is further information in the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.epinio.io/installation/install_epinio_cli#verify-file-checksum-signature"},"installation documentation"),"."))}f.isMDXComponent=!0}}]);