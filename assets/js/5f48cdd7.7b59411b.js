"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[19923],{3905:function(e,n,i){i.d(n,{Zo:function(){return p},kt:function(){return m}});var t=i(67294);function a(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function o(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function r(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?o(Object(i),!0).forEach((function(n){a(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)i=o[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):r(r({},n),e)),i},p=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var i=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(i),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return i?t.createElement(h,r(r({ref:n},p),{},{components:i})):t.createElement(h,r({ref:n},p))}));function m(e,n){var i=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=i.length,r=new Array(o);r[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<o;c++)r[c]=i[c];return t.createElement.apply(null,r)}return t.createElement.apply(null,i)}d.displayName="MDXCreateElement"},75687:function(e,n,i){i.r(n),i.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var t=i(83117),a=i(80102),o=(i(67294),i(3905)),r=["components"],l={sidebar_label:"Install the Epinio CLI",sidebar_position:2,title:"Install the Epinio CLI",description:"How to install the Epinio CLI on Windows, Linux and Mac",keywords:["epinio","install","cli","windows","mac","linux","homebrew"]},s=void 0,c={unversionedId:"installation/install_epinio_cli",id:"version-1.10.0/installation/install_epinio_cli",title:"Install the Epinio CLI",description:"How to install the Epinio CLI on Windows, Linux and Mac",source:"@site/versioned_docs/version-1.10.0/installation/install_epinio_cli.md",sourceDirName:"installation",slug:"/installation/install_epinio_cli",permalink:"/1.10.0/installation/install_epinio_cli",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.10.0/installation/install_epinio_cli.md",tags:[],version:"1.10.0",sidebarPosition:2,frontMatter:{sidebar_label:"Install the Epinio CLI",sidebar_position:2,title:"Install the Epinio CLI",description:"How to install the Epinio CLI on Windows, Linux and Mac",keywords:["epinio","install","cli","windows","mac","linux","homebrew"]},sidebar:"docs",previous:{title:"Install Epinio",permalink:"/1.10.0/installation/install_epinio"},next:{title:"DNS setup",permalink:"/1.10.0/installation/dns_setup"}},p={},u=[{value:"Install from Homebrew (Linux and Mac)",id:"install-from-homebrew-linux-and-mac",level:2},{value:"Install from the Binary Releases",id:"install-from-the-binary-releases",level:2},{value:"Linux",id:"linux",level:3},{value:"MacOS",id:"macos",level:3},{value:"Windows",id:"windows",level:3},{value:"Make the Binary Executable (Linux and Mac)",id:"make-the-binary-executable-linux-and-mac",level:3},{value:"Verify Downloaded Files",id:"verify-downloaded-files",level:2},{value:"Verify File Checksum Signature",id:"verify-file-checksum-signature",level:3},{value:"Verify File Checksum Integrity",id:"verify-file-checksum-integrity",level:3}],d={toc:u};function m(e){var n=e.components,i=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,t.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio")," CLI can be used to interact with a cluster with Epinio installed.\nRequests to the Epinio API server are authenticated with Basic Auth.\nNo direct access to the cluster is required (e.g. through kubectl)."),(0,o.kt)("h2",{id:"install-from-homebrew-linux-and-mac"},"Install from Homebrew (Linux and Mac)"),(0,o.kt)("p",null,"Epinio has a formula available in the homebrew/core tap."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew install epinio\n")),(0,o.kt)("p",null,"Alternatively, if you want to get the latest Epinio CLI faster, there is a custom tap you can use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew tap epinio/tap\nbrew install epinio/tap/epinio\n")),(0,o.kt)("h2",{id:"install-from-the-binary-releases"},"Install from the Binary Releases"),(0,o.kt)("p",null,"Find the latest version at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/epinio/epinio/releases"},"Releases"),"."),(0,o.kt)("h3",{id:"linux"},"Linux"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -o epinio -L https://github.com/epinio/epinio/releases/download/v1.10.0/epinio-linux-x86_64\n")),(0,o.kt)("h3",{id:"macos"},"MacOS"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -o epinio -L https://github.com/epinio/epinio/releases/download/v1.10.0/epinio-darwin-x86_64\n")),(0,o.kt)("h3",{id:"windows"},"Windows"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," curl -LO https://github.com/epinio/epinio/releases/download/v1.10.0/epinio-windows-x86_64.zip\n")),(0,o.kt)("p",null,"Extract the zip archive then make sure that the ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable references the directory where the ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio")," binary is located."),(0,o.kt)("h3",{id:"make-the-binary-executable-linux-and-mac"},"Make the Binary Executable (Linux and Mac)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x epinio\n")),(0,o.kt)("p",null,"Make sure your ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH")," environment variable contains the directory where you placed the Epinio binary."),(0,o.kt)("h2",{id:"verify-downloaded-files"},"Verify Downloaded Files"),(0,o.kt)("p",null,"This is done using the ",(0,o.kt)("inlineCode",{parentName:"p"},"cosign")," tool.\nThe following commands were tested using cosign version 2.1.1."),(0,o.kt)("h3",{id:"verify-file-checksum-signature"},"Verify File Checksum Signature"),(0,o.kt)("p",null,"Instead of signing all release assets, Epinio signs a file containing checksums for the release assets.\nFrom the repository you can download the three files:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"epinio_1.10.0_checksums.txt.pem"),","),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"epinio_1.10.0_checksums.txt.sig"),","),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"epinio_1.10.0_checksums.txt"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl -LO https://github.com/epinio/epinio/releases/download/v1.10.0/epinio_1.10.0_checksums.txt.pem\ncurl -LO https://github.com/epinio/epinio/releases/download/v1.10.0/epinio_1.10.0_checksums.txt.sig\ncurl -LO https://github.com/epinio/epinio/releases/download/v1.10.0/epinio_1.10.0_checksums.txt\n")),(0,o.kt)("p",null,"Once you have the three files locally, you can execute the following command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'cosign verify-blob \\\n    --certificate-identity-regexp "https://github.com/epinio/epinio" \\\n    --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \\\n    --cert      epinio_1.10.0_checksums.txt.pem \\\n    --signature epinio_1.10.0_checksums.txt.sig \\\n    epinio_1.10.0_checksums.txt\n')),(0,o.kt)("p",null,"A successful output looks like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Verified OK\n")),(0,o.kt)("p",null,"Now you can verify the asset's checksum integrity."),(0,o.kt)("h3",{id:"verify-file-checksum-integrity"},"Verify File Checksum Integrity"),(0,o.kt)("p",null,"Before verifying the file integrity, you should first verify the checksum file signature.\nOnce you\u2019ve downloaded both the checksums and your binary, you can verify integrity by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sha256sum --ignore-missing -c epinio_1.10.0_checksums.txt\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"For this check to work the local ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio")," binary must have the same name as\nlisted in the checksum file, i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio-linux-x86_64"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio-darwin-x86_64"),", etc."),(0,o.kt)("p",{parentName:"admonition"},"For Windows the checksum is for the zip archive, not for the binary inside.")),(0,o.kt)("h1",{id:"verify-the-installation"},"Verify the Installation"),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio version")," to test the successful installation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"> epinio version\nEpinio Version: v1.10.0\nGo Version: go1.20\n")))}m.isMDXComponent=!0}}]);