"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[33126],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),f=o,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},72428:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var n=r(83117),o=r(80102),i=(r(67294),r(3905)),a=["components"],s={sidebar_label:"Ingress separation",sidebar_position:9,title:"Separating application Ingress from Epinio API server Ingress",description:"How to separate application Ingress from Epinio API server Ingress",keywords:["epinio","kubernetes","separate application ingress","epinio api server"],"doc-type":["how-to"],"doc-topic":["epinio","how-to","other","ingress-separation"],"doc-persona":["epinio-developer","epinio-operator"]},p=void 0,l={unversionedId:"howtos/other/separate_workload_ingress",id:"howtos/other/separate_workload_ingress",title:"Separating application Ingress from Epinio API server Ingress",description:"How to separate application Ingress from Epinio API server Ingress",source:"@site/docs/howtos/other/separate_workload_ingress.md",sourceDirName:"howtos/other",slug:"/howtos/other/separate_workload_ingress",permalink:"/next/howtos/other/separate_workload_ingress",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/howtos/other/separate_workload_ingress.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_label:"Ingress separation",sidebar_position:9,title:"Separating application Ingress from Epinio API server Ingress",description:"How to separate application Ingress from Epinio API server Ingress",keywords:["epinio","kubernetes","separate application ingress","epinio api server"],"doc-type":["how-to"],"doc-topic":["epinio","how-to","other","ingress-separation"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"Pushing with a Git job",permalink:"/next/howtos/other/gitjob_push"},next:{title:"Port forwarding",permalink:"/next/howtos/other/port_forwarding"}},c={},u=[{value:"References",id:"references",level:2}],d={toc:u};function f(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"By default, applications deployed through Epinio share their ingress class with Epinio's API server."),(0,i.kt)("p",null,"For situations where this kind of behavior isn't wanted you achieve separation with a couple of steps."),(0,i.kt)("p",null,"Set the Helm template variable ",(0,i.kt)("inlineCode",{parentName:"p"},"server.ingressClassName")," to the name of the Ingress class to use for application Ingress:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"helm install \\\n  --set server.ingressClassName=nginx\n  ... (other options here) \\\n  epinio epinio/epinio\n")),(0,i.kt)("p",null,"To use this application Ingress with a domain different to the Helm template variable ",(0,i.kt)("inlineCode",{parentName:"p"},"global.domain"),",\nthe user can use ",(0,i.kt)("inlineCode",{parentName:"p"},"--route")," flag.\nDo this when pushing an application through the Epinio CLI or by setting a ",(0,i.kt)("inlineCode",{parentName:"p"},"Route")," value using the Epinio Web UI.\nThe route value must contain the entire domain used by the application."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"epinio app push -n sample -p . --route sample.myawesomedomain.org\n")),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/next/references/customization/lb"},"Load Balancers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/next/howtos/customization/custom_routes"},"Custom Routes"))))}f.isMDXComponent=!0}}]);