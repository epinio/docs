"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[67709],{3905:function(e,n,o){o.d(n,{Zo:function(){return p},kt:function(){return d}});var i=o(67294);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function r(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,i)}return o}function a(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function c(e,n){if(null==e)return{};var o,i,t=function(e,n){if(null==e)return{};var o,i,t={},r=Object.keys(e);for(i=0;i<r.length;i++)o=r[i],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)o=r[i],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var s=i.createContext({}),u=function(e){var n=i.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):a(a({},n),e)),o},p=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},l=i.forwardRef((function(e,n){var o=e.components,t=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(o),d=t,m=l["".concat(s,".").concat(d)]||l[d]||f[d]||r;return o?i.createElement(m,a(a({ref:n},p),{},{components:o})):i.createElement(m,a({ref:n},p))}));function d(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=o.length,a=new Array(r);a[0]=l;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:t,a[1]=c;for(var u=2;u<r;u++)a[u]=o[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,o)}l.displayName="MDXCreateElement"},65402:function(e,n,o){o.r(n),o.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return f}});var i=o(83117),t=o(80102),r=(o(67294),o(3905)),a=["components"],c={sidebar_label:"epinio configuration show",description:"epinio configuration show",keywords:["epinio","kubernetes","epinio configuration show"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-configuration-show"],"doc-persona":["epinio-developer","epinio-operator"]},s=void 0,u={unversionedId:"references/commands/cli/configuration/epinio_configuration_show",id:"references/commands/cli/configuration/epinio_configuration_show",title:"epinio_configuration_show",description:"epinio configuration show",source:"@site/docs/references/commands/cli/configuration/epinio_configuration_show.md",sourceDirName:"references/commands/cli/configuration",slug:"/references/commands/cli/configuration/epinio_configuration_show",permalink:"/next/references/commands/cli/configuration/epinio_configuration_show",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/references/commands/cli/configuration/epinio_configuration_show.md",tags:[],version:"current",frontMatter:{sidebar_label:"epinio configuration show",description:"epinio configuration show",keywords:["epinio","kubernetes","epinio configuration show"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-configuration-show"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"epinio configuration list",permalink:"/next/references/commands/cli/configuration/epinio_configuration_list"},next:{title:"epinio configuration unbind",permalink:"/next/references/commands/cli/configuration/epinio_configuration_unbind"}},p={},f=[{value:"epinio configuration show",id:"epinio-configuration-show",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],l={toc:f};function d(e){var n=e.components,o=(0,t.Z)(e,a);return(0,r.kt)("wrapper",(0,i.Z)({},l,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"epinio-configuration-show"},"epinio configuration show"),(0,r.kt)("p",null,"Configuration information"),(0,r.kt)("h3",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Show detailed information of the named configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"epinio configuration show NAME [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  -h, --help            help for show\n  -o, --output string   sets output format [text|json] (default "text")\n')),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  -H, --header stringArray       Add custom header to every request executed\n  -c, --kubeconfig string        (KUBECONFIG) path to a kubeconfig, not required in-cluster\n      --no-colors                Suppress colorized output\n      --settings-file string     (EPINIO_SETTINGS) set path of settings file (default "~/.config/epinio/settings.yaml")\n      --skip-ssl-verification    (SKIP_SSL_VERIFICATION) Skip the verification of TLS certificates\n      --timeout-multiplier int   (EPINIO_TIMEOUT_MULTIPLIER) Multiply timeouts by this factor (default 1)\n      --trace-file string        (TRACE_FILE) Print trace messages to the specified file\n      --trace-level int          (TRACE_LEVEL) Only print trace messages at or above this level (0 to 255, default 0, print nothing)\n      --trace-output string      (TRACE_OUTPUT) Sets trace output format [text,json] (default "text")\n      --verbosity int            (VERBOSITY) Only print progress messages at or above this level (0 or 1, default 0)\n')),(0,r.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/next/references/commands/cli/configuration/epinio_configuration"},"epinio configuration"),"\t - Epinio configuration features")))}d.isMDXComponent=!0}}]);