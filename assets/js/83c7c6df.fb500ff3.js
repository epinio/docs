"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[77330],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?a.createElement(f,o(o({ref:n},c),{},{components:t})):a.createElement(f,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},61192:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return d}});var a=t(83117),r=t(80102),i=(t(67294),t(3905)),o=["components"],p={sidebar_label:"Recovering applications after CRD cycling",sidebar_position:4,title:"Recovering applications after CRD cycling",description:"How to recover applications after cycling the Epinio CRDs",keywords:["epinio","kubernetes","application recovery","crd"],"doc-type":["how-to"],"doc-topic":["epinio","how-to","recovery"],"doc-persona":["epinio-operator"]},l=void 0,s={unversionedId:"howtos/use-develop/app_recover",id:"howtos/use-develop/app_recover",title:"Recovering applications after CRD cycling",description:"How to recover applications after cycling the Epinio CRDs",source:"@site/docs/howtos/use-develop/app_recover.md",sourceDirName:"howtos/use-develop",slug:"/howtos/use-develop/app_recover",permalink:"/next/howtos/use-develop/app_recover",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/howtos/use-develop/app_recover.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Recovering applications after CRD cycling",sidebar_position:4,title:"Recovering applications after CRD cycling",description:"How to recover applications after cycling the Epinio CRDs",keywords:["epinio","kubernetes","application recovery","crd"],"doc-type":["how-to"],"doc-topic":["epinio","how-to","recovery"],"doc-persona":["epinio-operator"]},sidebar:"docs",previous:{title:"Multiple namespaces",permalink:"/next/howtos/use-develop/namespaces"},next:{title:"Debugging an application",permalink:"/next/howtos/use-develop/debug"}},c={},d=[],u={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Epinio uses 3 Kubernetes CRDs to manage its service catalog entries, app charts, and application data."),(0,i.kt)("p",null,"When deleting a CRD Kubernetes also deletes all associated CRs."),(0,i.kt)("p",null,"If, during an upgrade of an Epinio installation Epinio's CRDs were deleted, this means that Epinio's\nservice catalog entries, custom app charts, and applications data are ",(0,i.kt)("strong",{parentName:"p"},"gone"),"."),(0,i.kt)("p",null,"Regarding the latter note that the active parts of Epinio applications use regular Kubernetes\nresources, and thus keep running during such an operation. Epinio however will lose track of these\napplications."),(0,i.kt)("p",null,"To recover from such a scenario the best way is to have made backups of all catalog entries, app\ncharts, and application data before the upgrade operation, and then re-apply them after."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# SAVE\nkubectl get app.application.epinio.io      -A -o yaml > APPLICATIONS\nkubectl get appchart.application.epinio.io -A -o yaml > APPCHARTS\nkubectl get service.application.epinio.io  -A -o yaml > CATALOG\n\n# UPGRADE\n\n# RESTORE\nkubectl apply -f APPLICATIONS\nkubectl apply -f APPCHARTS\nkubectl apply -f CATALOG\n")),(0,i.kt)("p",null,"If taking a backup was forgotten then recovery should be relatively easy for service catalog entries\nand app charts. The standard entries and app charts are re-created when Epinio is re-installed.  For\nthe non-standard entries and app-charts it is expected that the operator has their definitions\navailable, precisely because they are non-standard, and managed by the operator instead of Epinio."),(0,i.kt)("p",null,"This leaves the application data."),(0,i.kt)("p",null,"Scaling information, environment variables, bound configuration and services are stored in regular\nKubernetes resources (Secrets) and are therefore not affected by the deletion. Recovery is automatic\nwhen the central application CR is created."),(0,i.kt)("p",null,"An application data resource has the form"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: application.epinio.io/v1\nkind: App\nmetadata:\n  annotations:\n    epinio.io/created-by: admin\n  name: fox\n  namespace: workspace\nspec:\n  blobuid: 5d00477c-9a2d-4c6f-bdc3-d1094f4e8901\n  builderimage: paketobuildpacks/builder-jammy-full:0.3.290\n  chartname: standard\n  imageurl: registry.epinio.svc.cluster.local:5000/apps/workspace-fox:1642fcf755ab41e8\n  origin:\n    path: /home/work/SUSE/dev/epinio/assets/sample-app\n  routes:\n  - fox.172.18.0.4.omg.howdoi.website\n  - foxy.172.18.0.4.omg.howdoi.website\n  stageid: 1642fcf755ab41e8\n")),(0,i.kt)("p",null,"Recovery of the missing application requires filling out ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"namespace"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"spec"),".\nMost of the necessary information can be found in the application pods (runtime and staging), and ingresses.\nFor inactive applications, which do not have pods nor ingresses, this means that the ",(0,i.kt)("inlineCode",{parentName:"p"},"spec")," information is left empty."),(0,i.kt)("p",null,"Use"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pod -A -l 'app.kubernetes.io/managed-by=epinio'\n")),(0,i.kt)("p",null,"to locate all application pods managed by Epinio.\nThis includes the staging pods."),(0,i.kt)("p",null,"The labels of the application's runtime pods directly provide application ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"namespace"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"stageid"),".\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"chartname")," is indirectly recoverable by cross-referencing the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"helm.sh/chart")," against the app chart resources.\nThese should be recovered already."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Label"),(0,i.kt)("th",{parentName:"tr",align:null},"Content"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"app.kubernetes.io/name")),(0,i.kt)("td",{parentName:"tr",align:null},"name")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"app.kubernetes.io/part-of")),(0,i.kt)("td",{parentName:"tr",align:null},"namespace")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"epinio.io/stage-id")),(0,i.kt)("td",{parentName:"tr",align:null},"stageid")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"helm.sh/chart")),(0,i.kt)("td",{parentName:"tr",align:null},"chartname, indirect via app charts")))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"  labels:\n    app.kubernetes.io/component: application\n    app.kubernetes.io/managed-by: epinio\n    app.kubernetes.io/name: fox\n    app.kubernetes.io/part-of: workspace\n    epinio.io/app-container: rfox-ff0f0a8b656f0b44c26933acd2e367b6c1211290\n    epinio.io/stage-id: 1642fcf755ab41e8\n    helm.sh/chart: epinio-application-0.1.26\n    pod-template-hash: 5f9fd5c945\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"imageurl")," is recoverable from the pod's ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.containers[0].image"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  containers:\n  - image: 127.0.0.1:30500/apps/workspace-fox:1642fcf755ab41e8\n")),(0,i.kt)("p",null,"Replace the ",(0,i.kt)("inlineCode",{parentName:"p"},"host:port")," part of the url with ",(0,i.kt)("inlineCode",{parentName:"p"},"registry.<ns>.svc.cluster.local:5000"),".\nThe placeholder ",(0,i.kt)("inlineCode",{parentName:"p"},"<ns>")," refers to the namespace Epinio was installed in."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"blobuid")," is recovered from the application's staging pod, specifically its ",(0,i.kt)("inlineCode",{parentName:"p"},"epinio.io/blob-uid")," label.\nAn alternative location is the ",(0,i.kt)("inlineCode",{parentName:"p"},"BLOBID")," environment variable found in the container specifications of the staging pod."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"APPIMAGE")," environment variable in the same place is an alternate location for the ",(0,i.kt)("inlineCode",{parentName:"p"},"imageurl")," as well.\nIt is arguably even better, as no editing is required."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: BLOBID\n  value: 5d00477c-9a2d-4c6f-bdc3-d1094f4e8901\n[...]\n- name: APPIMAGE\n  value: registry.epinio.svc.cluster.local:5000/apps/workspace-fox:1642fcf755ab41e8\n")),(0,i.kt)("p",null,"Furthermore, the ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.containers[0].image")," value provides the ",(0,i.kt)("inlineCode",{parentName:"p"},"builderimage"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  containers:\n  - args:\n    - -c\n    - source /stage-support/build\n    command:\n    - /bin/bash\n    env:\n    [...]\n    image: paketobuildpacks/builder-jammy-full:0.3.290\n[...]\n")),(0,i.kt)("p",null,"To recover the application routes look at the Ingress resources in the application's namespace.\nThe ingresses for an application ",(0,i.kt)("inlineCode",{parentName:"p"},"<name>")," are named ",(0,i.kt)("inlineCode",{parentName:"p"},"r<name>-...")," and the listed hosts are the routes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"% kubectl get ingress -n workspace\nNAME                                                              CLASS     HOSTS                                [...]\nrfox-fox1721804omghowd-5af9c73b3c19f041d061042e158408a5275b015e   traefik   fox.172.18.0.4.omg.howdoi.website    [...]\nrfox-foxy1721804omghow-22ecdc59ff0c5c7b0f328802c6abea7739c2a388   traefik   foxy.172.18.0.4.omg.howdoi.website   [...]\n")),(0,i.kt)("p",null,"Not recoverable is the ",(0,i.kt)("inlineCode",{parentName:"p"},"origin")," data. It is stored nowhere else in the system."),(0,i.kt)("p",null,"It is of course possible to enter it manually, if it is remembered."))}m.isMDXComponent=!0}}]);