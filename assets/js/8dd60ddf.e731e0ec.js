"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[46100],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=l(n),d=i,m=h["".concat(p,".").concat(d)]||h[d]||u[d]||r;return n?o.createElement(m,a(a({ref:t},c),{},{components:n})):o.createElement(m,a({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<r;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},92774:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var o=n(83117),i=n(80102),r=(n(67294),n(3905)),a=["components"],s={sidebar_label:"Pushing with a Git job",sidebar_position:6,title:"Pushing with a Git job",description:"How to do an Epinio push with a Git job.",keywords:["epinio","kubernetes","epinio push","git job"],"doc-type":["how-to"],"doc-topic":["epinio","how-to","other","gitjob-push"],"doc-persona":["epinio-developer","epinio-operator"]},p=void 0,l={unversionedId:"howtos/other/gitjob_push",id:"version-1.11.0/howtos/other/gitjob_push",title:"Pushing with a Git job",description:"How to do an Epinio push with a Git job.",source:"@site/versioned_docs/version-1.11.0/howtos/other/gitjob_push.md",sourceDirName:"howtos/other",slug:"/howtos/other/gitjob_push",permalink:"/howtos/other/gitjob_push",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.11.0/howtos/other/gitjob_push.md",tags:[],version:"1.11.0",sidebarPosition:6,frontMatter:{sidebar_label:"Pushing with a Git job",sidebar_position:6,title:"Pushing with a Git job",description:"How to do an Epinio push with a Git job.",keywords:["epinio","kubernetes","epinio push","git job"],"doc-type":["how-to"],"doc-topic":["epinio","how-to","other","gitjob-push"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"Certificate issuers",permalink:"/howtos/other/certificate_issuers"},next:{title:"Ingress separation",permalink:"/howtos/other/separate_workload_ingress"}},c={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Setup",id:"setup",level:2},{value:"Install GitJob",id:"install-gitjob",level:3},{value:"Check Epinio installation",id:"check-epinio-installation",level:3},{value:"Upload Epinio settings",id:"upload-epinio-settings",level:3},{value:"Setup sample project",id:"setup-sample-project",level:3},{value:"Using Webhooks",id:"using-webhooks",level:3}],h={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,'In certain other "application deployment" solutions,\nthere is a feature that lets you set up a deployment that rebuilds and republishes,\nwhen your code repository in Git changes'),(0,r.kt)("p",null,"You can have this functionality in Epinio using the GitJob CRD from ",(0,r.kt)("a",{parentName:"p",href:"https://fleet.rancher.io/"},"Rancher Fleet"),"."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("h3",{id:"install-gitjob"},"Install GitJob"),(0,r.kt)("p",null,"If you don't have Rancher, or stand-alone Fleet installed, you need to\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rancher/gitjob#running"},"install the GitJob operator"),"."),(0,r.kt)("p",null,"Now you need to setup the Service Account to run your Jobs with.\nYou don't need to do anything using the Kube API, so you don't need to add any role bindings to it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: epinio-gitjob\n")),(0,r.kt)("h3",{id:"check-epinio-installation"},"Check Epinio installation"),(0,r.kt)("p",null,"If you are using Rancher, you can install Epinio directly from there.\nFor more information check the\n",(0,r.kt)("a",{parentName:"p",href:"/installation/other_inst_scenarios/install_epinio_on_rancher"},"Rancher configuration")," with Epinio."),(0,r.kt)("p",null,"Once you have deployed Epinio,\nlog in as admin and verify that the namespace ",(0,r.kt)("inlineCode",{parentName:"p"},"workspace")," exists.\nIt also needs to be the current target.\nYou can do this, if necessary, by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"epinio namespace create workspace \nepinio target workspace \n")),(0,r.kt)("h3",{id:"upload-epinio-settings"},"Upload Epinio settings"),(0,r.kt)("p",null,"For the GitJob to authenticate and push correctly, upload your Epinio settings file to the cluster with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl create secret generic epinio-creds --from-file=$HOME/.config/epinio/settings.yaml\n")),(0,r.kt)("p",null,"This creates a secret containing the settings.yaml when you do an ",(0,r.kt)("inlineCode",{parentName:"p"},"epinio login")),(0,r.kt)("h3",{id:"setup-sample-project"},"Setup sample project"),(0,r.kt)("p",null,"Next, as an example, you can use the 12factor app to write a GitJob."),(0,r.kt)("p",null,"Create a YAML file called ",(0,r.kt)("inlineCode",{parentName:"p"},"12factor-gitjob.yaml")," containing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: gitjob.cattle.io/v1\nkind: GitJob\nmetadata:\n  # The name of the GitJob, doesn\'t need to match the project.\n  name: samplepush\nspec:\n  syncInterval: 15\n  git:\n    # The git repo and branch to track. \n    repo: https://github.com/epinio/example-12factor\n    branch: main\n  jobSpec:\n    template:\n      spec:\n        # This should match what we created in the last step\n        serviceAccountName: epinio-gitjob\n        restartPolicy: "Never"\n        containers:\n        # This version should match your epinio deployment\n        - image: "ghcr.io/epinio/epinio-server:v1.8.1"\n          name: epinio-push\n          volumeMounts:\n          - name: settings\n            mountPath: "/settings/"\n            readOnly: true  \n          - name: tmp\n            mountPath: /tmp\n            readOnly: false\n          env:\n          - name: EPINIO_SETTINGS\n            value: "/settings/settings.yaml"\n          command:\n          - /epinio \n          args:\n          - push\n          - "--name"\n          # This is the name of the app to push\n          - test12factor\n          workingDir: /workspace/source\n        volumes:\n        - name: settings\n          secret:\n            secretName: epinio-creds\n        - name: tmp\n          emptyDir: {}\n')),(0,r.kt)("p",null,"You can apply this via:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl apply -f 12factor-gitjob.yaml\n")),(0,r.kt)("p",null,"Once applied, you should see a Job and then Pod get created:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl get job,pod\n")),(0,r.kt)("p",null,"You can follow the logs of the pod listed earlier with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"kubectl logs <pod_name> -f\n")),(0,r.kt)("h3",{id:"using-webhooks"},"Using Webhooks"),(0,r.kt)("p",null,"If you prefer to use webhooks instead of polling,\nset up the job in the same way as before but also follow the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rancher/gitjob#webhook"},"Rancher webhook instructions"),"."))}d.isMDXComponent=!0}}]);