"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[77181],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=s(a),m=i,k=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(k,l(l({ref:t},c),{},{components:a})):n.createElement(k,l({ref:t},c))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,l=new Array(o);l[0]=d;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r.mdxType="string"==typeof e?e:i,l[1]=r;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},91966:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return u}});var n=a(83117),i=a(80102),o=(a(67294),a(3905)),l=["components"],r={sidebar_label:"Epinio Journey: Deploy complex applications with a custom builder image",sidebar_position:4,title:"Deploying a complex application",description:"A walk-through for a more complex application deployment with Epinio.",keywords:["Epinio","kubernetes","application development","application deployment","complex application"]},p=void 0,s={unversionedId:"tutorials/custom_builder_go",id:"tutorials/custom_builder_go",title:"Deploying a complex application",description:"A walk-through for a more complex application deployment with Epinio.",source:"@site/docs/tutorials/custom_builder_go.md",sourceDirName:"tutorials",slug:"/tutorials/custom_builder_go",permalink:"/next/tutorials/custom_builder_go",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/tutorials/custom_builder_go.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Epinio Journey: Deploy complex applications with a custom builder image",sidebar_position:4,title:"Deploying a complex application",description:"A walk-through for a more complex application deployment with Epinio.",keywords:["Epinio","kubernetes","application development","application deployment","complex application"]},sidebar:"docs",previous:{title:"Epinio journey: Single developer",permalink:"/next/tutorials/single-dev-workflow"},next:{title:"Advanced topics",permalink:"/next/explanations/advanced"}},c={},u=[{value:"Basic concepts and prerequisites",id:"basic-concepts-and-prerequisites",level:2},{value:"Create the stack",id:"create-the-stack",level:2},{value:"Build the stack and publish the image",id:"build-the-stack-and-publish-the-image",level:3},{value:"Creating the <code>make</code> buildpack",id:"creating-the-make-buildpack",level:2},{value:"<code>bin/detect</code>",id:"bindetect",level:3},{value:"<code>bin/build</code>",id:"binbuild",level:3},{value:"Create and publish the builder",id:"create-and-publish-the-builder",level:2},{value:"Deploy Gitea",id:"deploy-gitea",level:2},{value:"Create and bind the database",id:"create-and-bind-the-database",level:3}],d={toc:u};function m(e){var t=e.components,a=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this tutorial you use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/go-gitea/gitea"},"Gitea"),"\nto work through a more complex application with Epinio."),(0,o.kt)("p",null,"Gitea is a self-hosted Git service, written in Go and Node.js."),(0,o.kt)("p",null,"At the time of writing the Paketo Go buildpack doesn't support Node.js asset compilation,\n(see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paketo-buildpacks/go/issues/671"},"issue #671"),"),\nso you need to create a custom builder."),(0,o.kt)("p",null,"The builder checks the needed Go and Node dependencies,\nand executes the ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," command to build both the front end and the back end."),(0,o.kt)("p",null,"The example code used during this tutorial is available in the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/epinio/example-builder-gitea"},"example-builder-gitea")," repository."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/epinio/example-builder-gitea\ngit submodule update --init --recursive\ncd example-builder-gitea\n")),(0,o.kt)("h2",{id:"basic-concepts-and-prerequisites"},"Basic concepts and prerequisites"),(0,o.kt)("p",null,"Before starting, it's useful to understand the buildpacks concepts and have a few tools already installed."),(0,o.kt)("p",null,"The buildpack documentation describes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://buildpacks.io/docs/concepts/components/stack/"},"stacks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://buildpacks.io/docs/concepts/components/builder/"},"builders")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://buildpacks.io/docs/concepts/components/buildpack/"},"buildpacks"),".")),(0,o.kt)("p",null,"You should also have ",(0,o.kt)("a",{parentName:"p",href:"https://buildpacks.io/docs/tools/pack/"},(0,o.kt)("inlineCode",{parentName:"a"},"pack"))," installed,\nalong with ",(0,o.kt)("inlineCode",{parentName:"p"},"docker")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"skopeo")," (to manage Open Container Initiative (OCI) artifacts)."),(0,o.kt)("h2",{id:"create-the-stack"},"Create the stack"),(0,o.kt)("p",null,"It's impossible to reuse the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paketo-buildpacks/bionic-full-stack"},"Paketo Full Stack"),"\nbecause of a missing dependency in the ",(0,o.kt)("inlineCode",{parentName:"p"},"run")," image.\nTo make it easy there is a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/epinio/bionic-full-stack"},"forked"),"\nstack and added ",(0,o.kt)("inlineCode",{parentName:"p"},"git")," to the run packages\n(see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/epinio/bionic-full-stack/commit/408e949558a437c99858ac7bb99a8b78e78935e8"},"408e949"),")."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"We had to fork and reuse the same stack ID so that it's possible to reuse certain Paketo buildpacks.\nThey would work only with these stacks\n(see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paketo-buildpacks/node-engine/blob/main/buildpack.toml#L29"},"buildpack.toml#L29"),").")),(0,o.kt)("h3",{id:"build-the-stack-and-publish-the-image"},"Build the stack and publish the image"),(0,o.kt)("p",null,"To build the stack:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"./stacks/bionic-full-stack/scripts/create.sh\n")),(0,o.kt)("p",null,"This creates two Open Container Initiative (OCI) images in the ",(0,o.kt)("inlineCode",{parentName:"p"},"stacks/bionic-full-stack/build")," folder:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"build.oci"),(0,o.kt)("li",{parentName:"ul"},"run.oci")),(0,o.kt)("p",null,"From this folder you can un-tar the OCI artifacts:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"cd stacks/bionic-full-stack/build\nmkdir build && tar -xf build.oci -C build\nmkdir run   && tar -xf run.oci   -C run\n")),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"skopeo")," to copy the artifacts into the local Docker registry:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"skopeo -v copy oci:build docker-daemon:ghcr.io/<username>/bionic-full-stack-build:0.1.0\nskopeo -v copy oci:run   docker-daemon:ghcr.io/<username>/bionic-full-stack-run:0.1.0\n")),(0,o.kt)("p",null,"Push them to a public registry:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"docker push ghcr.io/<username>/bionic-full-stack-build:0.1.0\ndocker push ghcr.io/<username>/bionic-full-stack-run:0.1.0\n")),(0,o.kt)("h2",{id:"creating-the-make-buildpack"},"Creating the ",(0,o.kt)("inlineCode",{parentName:"h2"},"make")," buildpack"),(0,o.kt)("p",null,"To build the Gitea application we created a ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," buildpack."),(0,o.kt)("h3",{id:"bindetect"},(0,o.kt)("inlineCode",{parentName:"h3"},"bin/detect")),(0,o.kt)("p",null,"During the ",(0,o.kt)("inlineCode",{parentName:"p"},"detect")," phase of the ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/detect")," script it checks the needed dependencies."),(0,o.kt)("p",null,"It checks for the existence of the Makefile:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"if [[ ! -f Makefile ]]; then\n    echo Makefile not found\n    exit 100\nfi\n")),(0,o.kt)("p",null,"It writes to the ",(0,o.kt)("inlineCode",{parentName:"p"},"plan.toml")," file that this buildpack requires Go and Node.js:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},'cat >> "${plan_path}" <<EOL\n[[requires]]\nname = "node"\n# version = "*"\n\n[requires.metadata]\nbuild = true\n\n[[requires]]\nname = "go"\n\n[requires.metadata]\nbuild = true\nEOL\n')),(0,o.kt)("h3",{id:"binbuild"},(0,o.kt)("inlineCode",{parentName:"h3"},"bin/build")),(0,o.kt)("p",null,"During the ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," phase the buildpack runs ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," to build the application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},'TAGS="bindata" make build\n')),(0,o.kt)("p",null,"Set up the app configuration changing the listening port in the ",(0,o.kt)("inlineCode",{parentName:"p"},"app.ini")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},'cp custom/conf/app.example.ini custom/conf/app.ini\nsed -i "s/;HTTP_PORT = 3000/HTTP_PORT = 8080/" custom/conf/app.ini\n')),(0,o.kt)("p",null,"Define the launch process in the ",(0,o.kt)("inlineCode",{parentName:"p"},"launch.toml")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},'cat >> "${layers_dir}/launch.toml" <<EOL\n[[processes]]\ntype = "web"\ncommand = "./gitea"\ndefault = true\nEOL\n')),(0,o.kt)("h2",{id:"create-and-publish-the-builder"},"Create and publish the builder"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"builder.toml")," file has the buildpack references and their execution order/groups."),(0,o.kt)("p",null,"You reference the ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," buildpack locally:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'[[buildpacks]]\nid = "make"\nversion = "0.0.1"\nuri = "../../buildpacks/make"\n')),(0,o.kt)("p",null,"Also, you use the Paketo ",(0,o.kt)("inlineCode",{parentName:"p"},"node-engine")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"go-dist")," Buildpacks:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'[[buildpacks]]\nuri = "docker://gcr.io/paketo-buildpacks/node-engine:1.3.0"\nversion = "1.3.0"\n\n[[buildpacks]]\nuri = "docker://gcr.io/paketo-buildpacks/go-dist:2.3.0"\nversion = "2.3.0"\n')),(0,o.kt)("p",null,"These buildpacks contain the Node.js and Go dependencies:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/paketo-buildpacks/node-engine"},"node-engine buildpack")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/paketo-buildpacks/go-dist"},"go-dist buildpack"))),(0,o.kt)("p",null,"Finally, create the builder image with ",(0,o.kt)("inlineCode",{parentName:"p"},"pack"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"pack builder create ghcr.io/<username>/gitea-builder:0.1.0 --config builders/gitea-builder/builder.toml\n")),(0,o.kt)("p",null,"Push it to a public registry:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"docker push ghcr.io/<username>/gitea-builder:0.1.0\n")),(0,o.kt)("h2",{id:"deploy-gitea"},"Deploy Gitea"),(0,o.kt)("p",null,"To deploy Gitea you can download the code from the repository, or directly refer to it."),(0,o.kt)("p",null,"You need to deploy a stable release, so find the commit of the ",(0,o.kt)("inlineCode",{parentName:"p"},"v1.19.0")," with a couple of curls:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"export GITEA_VERSION=v1.19.0\nexport GITEA_TAG_OBJECT_URL=$(curl -s https://api.github.com/repos/go-gitea/gitea/git/refs/tags/$GITEA_VERSION | jq -r '.object.url')\nexport GITEA_TAG_COMMIT_SHA=$(curl -s $GITEA_TAG_OBJECT_URL | jq -r '.object.sha')\n")),(0,o.kt)("p",null,"You can now deploy Gitea with a simple ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio push"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"epinio push --name gitea \\\n    --git https://github.com/go-gitea/gitea,$GITEA_TAG_COMMIT_SHA \\\n    --builder-image ghcr.io/<username>/gitea-builder:0.1.0\n")),(0,o.kt)("p",null,"It should be available on your cluster (that is, ",(0,o.kt)("a",{parentName:"p",href:"https://gitea."},"https://gitea."),"<SYSTEM_DOMAIN>)."),(0,o.kt)("h3",{id:"create-and-bind-the-database"},"Create and bind the database"),(0,o.kt)("p",null,"You can go a step further, creating and binding the ",(0,o.kt)("inlineCode",{parentName:"p"},"mysql")," database to your application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"epinio service create mysql-dev mydb\n")),(0,o.kt)("p",null,"Check the status of the service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"-> % epinio service show mydb\n\n\ud83d\udea2  Showing Service...\n\n\n\u2714\ufe0f  Details:\n|       KEY       |                                     VALUE                                      |\n|-----------------|--------------------------------------------------------------------------------|\n| Name            | mydb                                                                           |\n| Created         | 2023-04-04 15:56:20 +0200 CEST                                                 |\n| Catalog Service | mysql-dev                                                                      |\n| Version         | 8.0.31                                                                         |\n| Status          | deployed                                                                       |\n| Used-By         |                                                                                |\n| Internal Routes | xcca9aa0f19a036fb6389474a7be0-mysql-headless.workspace.svc.cluster.local:3306, |\n|                 | xcca9aa0f19a036fb6389474a7be0-mysql.workspace.svc.cluster.local:3306           |\n")),(0,o.kt)("p",null,"You can use the internal route ",(0,o.kt)("inlineCode",{parentName:"p"},"xcca9aa0f19a036fb6389474a7be0-mysql.workspace.svc.cluster.local:3306")," to reach your DB."),(0,o.kt)("p",null,"Bind it to the Gitea application with ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio service bind mydb gitea"),"."),(0,o.kt)("p",null,"Now you check the username and passwords in the configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"-> % epinio configuration list\n\n\ud83d\udea2  Listing configurations\nNamespace: workspace\n\n\n\u2714\ufe0f  Epinio Configurations:\n|                NAME                 |            CREATED             |  TYPE   | ORIGIN |          APPLICATIONS          |\n|-------------------------------------|--------------------------------|---------|--------|--------------------------------|\n| xcca9aa0f19a036fb6389474a7be0-mysql | 2023-04-04 15:56:22 +0200 CEST | service | mydb   | gitea (migrate to new access   |\n|                                     |                                |         |        | paths)                         |\n")),(0,o.kt)("p",null,"And:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"-> % epinio configuration show xcca9aa0f19a036fb6389474a7be0-mysql\n\n\ud83d\udea2  Configuration Details\nName: xcca9aa0f19a036fb6389474a7be0-mysql\nNamespace: workspace\n\n\ud83d\udea2\nCreated: 2023-04-04 15:56:22 +0200 CEST\nUser:\nType: service\nOrigin: mydb\nUsed-By: gitea\nSiblings:\n\n\u26a0\ufe0f  Attention: Migrate bound apps to new access paths\n\u2714\ufe0f\n|      PARAMETER      |   VALUE    |               ACCESS PATH                |\n|---------------------|------------|------------------------------------------|\n| mysql-password      | 6oUDWVHVcv | /configurations/mydb/mysql-password      |\n| mysql-root-password | eG83csnOLe | /configurations/mydb/mysql-root-password |\n\n\u26a0\ufe0f  Beware, the shown access paths are only available in the application's container\n")),(0,o.kt)("p",null,"You can use these credential to access the database.\nAccess the first time Gitea configuration from your browser and fill the database fields with the host, username, and password.\nThe database name is ",(0,o.kt)("inlineCode",{parentName:"p"},"my_database"),",\nit's the default value for Bitnami charts that Epinio uses for its example services."))}m.isMDXComponent=!0}}]);