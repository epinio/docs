"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[54218],{3905:function(e,i,n){n.d(i,{Zo:function(){return s},kt:function(){return f}});var t=n(67294);function r(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function o(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?o(Object(n),!0).forEach((function(i){r(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function c(e,i){if(null==e)return{};var n,t,r=function(e,i){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],i.indexOf(n)>=0||(r[n]=e[n]);return r}(e,i);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),l=function(e){var i=t.useContext(p),n=i;return e&&(n="function"==typeof e?e(i):a(a({},i),e)),n},s=function(e){var i=l(e.components);return t.createElement(p.Provider,{value:i},e.children)},m={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},u=t.forwardRef((function(e,i){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=l(n),f=r,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||o;return n?t.createElement(d,a(a({ref:i},s),{},{components:n})):t.createElement(d,a({ref:i},s))}));function f(e,i){var n=arguments,r=i&&i.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var c={};for(var p in i)hasOwnProperty.call(i,p)&&(c[p]=i[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},21957:function(e,i,n){n.r(i),n.d(i,{assets:function(){return s},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return m}});var t=n(83117),r=n(80102),o=(n(67294),n(3905)),a=["components"],c={sidebar_label:"epinio cli",title:"",description:"epinio cli",keywords:["epinio","kubernetes","epinio cli"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-cli"],"doc-persona":["epinio-developer","epinio-operator"]},p=void 0,l={unversionedId:"references/commands/cli/epinio",id:"version-1.11.0/references/commands/cli/epinio",title:"",description:"epinio cli",source:"@site/versioned_docs/version-1.11.0/references/commands/cli/epinio.md",sourceDirName:"references/commands/cli",slug:"/references/commands/cli/epinio",permalink:"/references/commands/cli/epinio",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.11.0/references/commands/cli/epinio.md",tags:[],version:"1.11.0",frontMatter:{sidebar_label:"epinio cli",title:"",description:"epinio cli",keywords:["epinio","kubernetes","epinio cli"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-cli"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"epinio configuration update",permalink:"/references/commands/cli/configuration/epinio_configuration_update"},next:{title:"epinio client-sync",permalink:"/references/commands/cli/epinio_client-sync"}},s={},m=[{value:"epinio",id:"epinio",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:m};function f(e){var i=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},u,n,{components:i,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"epinio"},"epinio"),(0,o.kt)("p",null,"Epinio cli"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"epinio cli is the official command line interface for Epinio PaaS "),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -H, --header stringArray       Add custom header to every request executed\n  -h, --help                     help for epinio\n  -c, --kubeconfig string        (KUBECONFIG) path to a kubeconfig, not required in-cluster\n      --no-colors                Suppress colorized output\n      --settings-file string     (EPINIO_SETTINGS) set path of settings file (default "~/.config/epinio/settings.yaml")\n      --skip-ssl-verification    (SKIP_SSL_VERIFICATION) Skip the verification of TLS certificates\n      --timeout-multiplier int   (EPINIO_TIMEOUT_MULTIPLIER) Multiply timeouts by this factor (default 1)\n      --trace-file string        (TRACE_FILE) Print trace messages to the specified file\n      --trace-level int          (TRACE_LEVEL) Only print trace messages at or above this level (0 to 255, default 0, print nothing)\n      --trace-output string      (TRACE_OUTPUT) Sets trace output format [text,json] (default "text")\n      --verbosity int            (VERBOSITY) Only print progress messages at or above this level (0 or 1, default 0)\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/app/epinio_app"},"epinio app"),"\t - Epinio application features"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_client-sync"},"epinio client-sync"),"\t - Downloads a client binary matching the currently logged server"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_completion"},"epinio completion"),"\t - Generate completion script for a shell"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/configuration/epinio_configuration"},"epinio configuration"),"\t - Epinio configuration features"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_export-registries"},"epinio export-registries"),"\t - List export registries"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/gitconfig/epinio_gitconfig"},"epinio gitconfig"),"\t - Epinio git configuration management"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_info"},"epinio info"),"\t - Shows information about the Epinio environment"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_login"},"epinio login"),"\t - Epinio login to the server"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_logout"},"epinio logout"),"\t - Epinio logout from server"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/namespace/epinio_namespace"},"epinio namespace"),"\t - Epinio-controlled namespaces"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_push"},"epinio push"),"\t - Push an application declared in the specified manifest"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_server"},"epinio server"),"\t - Starts the Epinio server."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/service/epinio_service"},"epinio service"),"\t - Epinio service management"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/settings/epinio_settings"},"epinio settings"),"\t - Epinio settings management"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_target"},"epinio target"),"\t - Targets an epinio-controlled namespace."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio_version"},"epinio version"),"\t - Print the version number")))}f.isMDXComponent=!0}}]);