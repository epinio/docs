"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[59657],{3905:function(e,i,n){n.d(i,{Zo:function(){return l},kt:function(){return u}});var t=n(67294);function o(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function r(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?r(Object(n),!0).forEach((function(i){o(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function a(e,i){if(null==e)return{};var n,t,o=function(e,i){if(null==e)return{};var n,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],i.indexOf(n)>=0||(o[n]=e[n]);return o}(e,i);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),p=function(e){var i=t.useContext(s),n=i;return e&&(n="function"==typeof e?e(i):c(c({},i),e)),n},l=function(e){var i=p(e.components);return t.createElement(s.Provider,{value:i},e.children)},f={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},g=t.forwardRef((function(e,i){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),g=p(n),u=o,d=g["".concat(s,".").concat(u)]||g[u]||f[u]||r;return n?t.createElement(d,c(c({ref:i},l),{},{components:n})):t.createElement(d,c({ref:i},l))}));function u(e,i){var n=arguments,o=i&&i.mdxType;if("string"==typeof e||o){var r=n.length,c=new Array(r);c[0]=g;var a={};for(var s in i)hasOwnProperty.call(i,s)&&(a[s]=i[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var p=2;p<r;p++)c[p]=n[p];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9933:function(e,i,n){n.r(i),n.d(i,{assets:function(){return l},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return f}});var t=n(83117),o=n(80102),r=(n(67294),n(3905)),c=["components"],a={sidebar_label:"epinio gitconfig",title:"",description:"epinio gitconfig",keywords:["epinio","kubernetes","epinio gitconfig"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-gitconfig"],"doc-persona":["epinio-developer","epinio-operator"]},s=void 0,p={unversionedId:"references/commands/cli/gitconfig/epinio_gitconfig",id:"version-1.11.0/references/commands/cli/gitconfig/epinio_gitconfig",title:"",description:"epinio gitconfig",source:"@site/versioned_docs/version-1.11.0/references/commands/cli/gitconfig/epinio_gitconfig.md",sourceDirName:"references/commands/cli/gitconfig",slug:"/references/commands/cli/gitconfig/epinio_gitconfig",permalink:"/references/commands/cli/gitconfig/epinio_gitconfig",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.11.0/references/commands/cli/gitconfig/epinio_gitconfig.md",tags:[],version:"1.11.0",frontMatter:{sidebar_label:"epinio gitconfig",title:"",description:"epinio gitconfig",keywords:["epinio","kubernetes","epinio gitconfig"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-gitconfig"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"epinio version",permalink:"/references/commands/cli/epinio_version"},next:{title:"epinio gitconfig create",permalink:"/references/commands/cli/gitconfig/epinio_gitconfig_create"}},l={},f=[{value:"epinio gitconfig",id:"epinio-gitconfig",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],g={toc:f};function u(e){var i=e.components,n=(0,o.Z)(e,c);return(0,r.kt)("wrapper",(0,t.Z)({},g,n,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"epinio-gitconfig"},"epinio gitconfig"),(0,r.kt)("p",null,"Epinio git configuration management"),(0,r.kt)("h3",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Manage git configurations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"epinio gitconfig [flags]\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -h, --help   help for gitconfig\n")),(0,r.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  -H, --header stringArray       Add custom header to every request executed\n  -c, --kubeconfig string        (KUBECONFIG) path to a kubeconfig, not required in-cluster\n      --no-colors                Suppress colorized output\n      --settings-file string     (EPINIO_SETTINGS) set path of settings file (default "~/.config/epinio/settings.yaml")\n      --skip-ssl-verification    (SKIP_SSL_VERIFICATION) Skip the verification of TLS certificates\n      --timeout-multiplier int   (EPINIO_TIMEOUT_MULTIPLIER) Multiply timeouts by this factor (default 1)\n      --trace-file string        (TRACE_FILE) Print trace messages to the specified file\n      --trace-level int          (TRACE_LEVEL) Only print trace messages at or above this level (0 to 255, default 0, print nothing)\n      --trace-output string      (TRACE_OUTPUT) Sets trace output format [text,json] (default "text")\n      --verbosity int            (VERBOSITY) Only print progress messages at or above this level (0 or 1, default 0)\n')),(0,r.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/commands/cli/epinio"},"epinio"),"\t - Epinio cli"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/commands/cli/gitconfig/epinio_gitconfig_create"},"epinio gitconfig create"),"\t - Creates a git configuration"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/commands/cli/gitconfig/epinio_gitconfig_delete"},"epinio gitconfig delete"),"\t - Delete git configurations"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/commands/cli/gitconfig/epinio_gitconfig_list"},"epinio gitconfig list"),"\t - Lists all git configurations"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/references/commands/cli/gitconfig/epinio_gitconfig_show"},"epinio gitconfig show"),"\t - Shows the details of a git configuration")))}u.isMDXComponent=!0}}]);