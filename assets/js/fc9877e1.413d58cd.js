"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[1201],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),f=u(n),m=i,g=f["".concat(l,".").concat(m)]||f[m]||c[m]||o;return n?r.createElement(g,a(a({ref:t},s),{},{components:n})):r.createElement(g,a({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,a[1]=p;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},63760:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return c}});var r=n(83117),i=n(80102),o=(n(67294),n(3905)),a=["components"],p={sidebar_label:"Git Configuration",title:""},l="Git Configuration",u={unversionedId:"references/git_configuration",id:"references/git_configuration",title:"",description:"Starting with version 1.10.0, Epinio supports Git configurations.",source:"@site/docs/references/git_configuration.md",sourceDirName:"references",slug:"/references/git_configuration",permalink:"/next/references/git_configuration",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/references/git_configuration.md",tags:[],version:"current",frontMatter:{sidebar_label:"Git Configuration",title:""},sidebar:"docs",previous:{title:"Configurations",permalink:"/next/references/configurations"},next:{title:"Application Manifests",permalink:"/next/references/manifests"}},s={},c=[],f={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"git-configuration"},"Git Configuration"),(0,o.kt)("p",null,"Starting with version ",(0,o.kt)("strong",{parentName:"p"},"1.10.0"),", Epinio supports Git configurations."),(0,o.kt)("p",null,"Configurations provide information enabling the cloning of private repositories, disabling of SSL verification, or extending verification through a custom bundle of certificates. All on a per git host (+user/org, +repository) basis."),(0,o.kt)("p",null,"A Git configuration is a Kubernetes secret with the ",(0,o.kt)("inlineCode",{parentName:"p"},'epinio.io/api-git-credentials: "true"')," label."),(0,o.kt)("p",null,"The available fields are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"url (required):")," the host of the git instance"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"provider:")," one of ",(0,o.kt)("inlineCode",{parentName:"li"},"github"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"gitlab"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"git"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"github_enterprise"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"gitlab_enterprise")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"username:")," used during the Basic Authentication "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"password:")," used during the Basic Authentication"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"userOrg:")," used to restrict the configuration to a specific organization/project "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"repo:")," used to restrict the configuration to a specific repository "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"skipSSL:")," used to skip the SSL verification "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"certificate:")," the CA bundle to load for the SSL verification with self-signed certificates")),(0,o.kt)("p",null,"When importing from a git repository Epinio will look for the the most specific matching configuration, if any. For example when trying to clone ",(0,o.kt)("inlineCode",{parentName:"p"},"https://github.com/myusername/myrepo")," Epinio will first look for a configuration having the ",(0,o.kt)("inlineCode",{parentName:"p"},"https://github.com")," ",(0,o.kt)("em",{parentName:"p"},"URL"),", a ",(0,o.kt)("inlineCode",{parentName:"p"},"myusername")," ",(0,o.kt)("em",{parentName:"p"},"userOrg")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},"myrepo")," ",(0,o.kt)("em",{parentName:"p"},"repo"),".\nIf not found it will look for a configuration having the ",(0,o.kt)("inlineCode",{parentName:"p"},"https://github.com")," ",(0,o.kt)("em",{parentName:"p"},"URL")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},"myusername")," ",(0,o.kt)("em",{parentName:"p"},"userOrg"),". And finally it will look for a configuration having just the ",(0,o.kt)("inlineCode",{parentName:"p"},"https://github.com")," ",(0,o.kt)("em",{parentName:"p"},"URL"),". If no configuration is found the clone from the Git repository will run without any customization."),(0,o.kt)("p",null,"All the fields, except for the URL, are optional."),(0,o.kt)("p",null,"For Github and Gitlab you can create a PAT (Personal Access Token) and use it in the ",(0,o.kt)("inlineCode",{parentName:"p"},"password")," field. You will need to provide a ",(0,o.kt)("inlineCode",{parentName:"p"},"username")," as well, but it can be anything. As a suggestion it's useful to use the username used to generate the token."),(0,o.kt)("p",null,"This is an example of a complete Git Configuration secret:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1 \nkind: Secret \ntype: Opaque \nmetadata: \n  labels: \n    epinio.io/api-git-credentials: "true"\n  name: github-epinio-example-go-configuration \n  namespace: epinio \nstringData:\n  url: https://github.com\n  provider: github\n  username: "myuser" \n  password: "abcde12345" \n  userOrg: epinio \n  repo: example-go \n  skipSSL: true \n  certificate: |\n    -----BEGIN CERTIFICATE-----\n    MIIBaTCCAQ+gAwIBAgIRAN4tvwEOKogvOzT/KccL8t8wCgYIKoZIzj0EAwIwFDES\n    ***************\n    -----END CERTIFICATE-----\n')),(0,o.kt)("p",null,"If you are looking for some examples you can check the ",(0,o.kt)("a",{parentName:"p",href:"/next/howtos/create_git_configuration"},"How-To"),"."))}m.isMDXComponent=!0}}]);