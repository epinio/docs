"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[42141],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return t?r.createElement(h,o(o({ref:n},p),{},{components:t})):r.createElement(h,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2097:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var r=t(83117),i=t(80102),a=(t(67294),t(3905)),o=["components"],l={sidebar_label:"Installing Epinio On RKE2",sidebar_position:19,title:""},s="Installing Epinio On RKE2",u={unversionedId:"installation/other_inst_scenarios/install_epinio_on_rke",id:"installation/other_inst_scenarios/install_epinio_on_rke",title:"",description:"This guide will help you to deploy a suitable RKE2 Kubernetes cluster for Epinio. More details can be found in RKE2 quickstart guide.",source:"@site/docs/installation/other_inst_scenarios/install_epinio_on_rke.md",sourceDirName:"installation/other_inst_scenarios",slug:"/installation/other_inst_scenarios/install_epinio_on_rke",permalink:"/next/installation/other_inst_scenarios/install_epinio_on_rke",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/docs/installation/other_inst_scenarios/install_epinio_on_rke.md",tags:[],version:"current",sidebarPosition:19,frontMatter:{sidebar_label:"Installing Epinio On RKE2",sidebar_position:19,title:""},sidebar:"docs",previous:{title:"Installing Epinio On Rancher",permalink:"/next/installation/other_inst_scenarios/install_epinio_on_rancher"},next:{title:"Installing Epinio On K3s (local)",permalink:"/next/installation/other_inst_scenarios/install_epinio_on_k3s"}},p={},c=[{value:"Install RKE2 Kubernetes cluster",id:"install-rke2",level:2},{value:"1. Run the installer, start and enable the rke2-server systemd service",id:"1-run-the-installer-start-and-enable-the-rke2-server-systemd-service",level:4},{value:"2. Configure environment variables for operating the RKE2 cluster",id:"2-configure-environment-variables-for-operating-the-rke2-cluster",level:4},{value:"RKE2 cluster prerequisities",id:"rke2-cluster-prerequisities",level:2},{value:"1. Install helm CLI",id:"1-install-helm-cli",level:4},{value:"2. Configure rke2-ingress-nginx-controller",id:"2-configure-rke2-ingress-nginx-controller",level:4},{value:"3. Deploy a dynamic storage provisioner",id:"3-deploy-a-dynamic-storage-provisioner",level:4},{value:"Installation",id:"installation",level:2}],d={toc:c};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installing-epinio-on-rke2"},"Installing Epinio On RKE2"),(0,a.kt)("p",null,"This guide will help you to deploy a suitable RKE2 Kubernetes cluster for Epinio. More details can be found in RKE2 ",(0,a.kt)("a",{parentName:"p",href:"https://docs.rke2.io/install/quickstart/"},"quickstart")," guide."),(0,a.kt)("h2",{id:"install-rke2"},"Install RKE2 Kubernetes cluster"),(0,a.kt)("p",null,"The following steps are performed using the ",(0,a.kt)("inlineCode",{parentName:"p"},"root")," account on a dedicated machine for the RKE2 server node."),(0,a.kt)("h4",{id:"1-run-the-installer-start-and-enable-the-rke2-server-systemd-service"},"1. Run the installer, start and enable the rke2-server systemd service"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sfL https://get.rke2.io | sh -\nsystemctl enable --now rke2-server.service\n")),(0,a.kt)("h4",{id:"2-configure-environment-variables-for-operating-the-rke2-cluster"},"2. Configure environment variables for operating the RKE2 cluster"),(0,a.kt)("p",null,"Execute the following commands in the RKE2 node shell and/or store them in the ",(0,a.kt)("inlineCode",{parentName:"p"},"/root/.bashrc")," file (or its equivalent) for persistence."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export PATH=$PATH:/var/lib/rancher/rke2/bin:/opt/rke2/bin\nexport KUBECONFIG=/etc/rancher/rke2/rke2.yaml\n")),(0,a.kt)("p",null,"Make sure that you can communicate with your new RKE2 cluster by running ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get pods --all-namespaces"),"."),(0,a.kt)("h2",{id:"rke2-cluster-prerequisities"},"RKE2 cluster prerequisities"),(0,a.kt)("p",null,"Perform the following steps on your RKE2 node before installing Epinio:"),(0,a.kt)("h4",{id:"1-install-helm-cli"},"1. Install helm CLI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n")),(0,a.kt)("h4",{id:"2-configure-rke2-ingress-nginx-controller"},"2. Configure rke2-ingress-nginx-controller"),(0,a.kt)("p",null,"While the ",(0,a.kt)("inlineCode",{parentName:"p"},"rke2-ingress-nginx-controller")," is on RKE2 clusters preinstalled by default, there is a need to set the IngressClass named ",(0,a.kt)("inlineCode",{parentName:"p"},"nginx")," up as the ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," class. This is done by running the command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl patch ingressClass nginx -p \'{"metadata": {"annotations":{"ingressclass.kubernetes.io/is-default-class": "true"}}}\'\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: You can specify a non-default IngressClass during the installation of Epinio with helm argument ",(0,a.kt)("inlineCode",{parentName:"p"},"--set ingress.ingressClassName=<className>"),".")),(0,a.kt)("h4",{id:"3-deploy-a-dynamic-storage-provisioner"},"3. Deploy a dynamic storage provisioner"),(0,a.kt)("p",null,"RKE2 clusters have no storage provisioner installed by default.\nTo support Epinio a storage provisioner is needed.\nYou can use any storage provisioner which provides, preferably, ",(0,a.kt)("inlineCode",{parentName:"p"},"ReadWriteMany")," (RWX) Access Mode and a ",(0,a.kt)("strong",{parentName:"p"},"default StorageClass")," resource for dynamic storage provisioning."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"To verify that your cluster provides a default StorageClass run the command  ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get storageclass"),". The default StorageClass is marked with the string ",(0,a.kt)("inlineCode",{parentName:"p"},"(default)")," next to its name in the output list.")),(0,a.kt)("p",null,"As an example, you can deploy and configure ",(0,a.kt)("inlineCode",{parentName:"p"},"local-path")," dynamic storage provisioner by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml\nkubectl patch storageclass local-path -p \'{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}\'\n')),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"For evaluation environments it is recommended to setup Epinio Ingress resources by using a wildcard DNS service such as ",(0,a.kt)("inlineCode",{parentName:"p"},"omg.howdoi.website"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"sslip.io"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"nip.io")," that points to the ",(0,a.kt)("inlineCode",{parentName:"p"},"INTERNAL-IP")," address of your kubernetes node."),(0,a.kt)("p",null,"For advanced and production environments you should configure an external load-balancer solution that listens on a public IP with an associated public FQDN domain. The role of the load-balancer is to perform a redirection of HTTP(S) traffic from the load-balancer endpoint to the internal Ingress resource(s) of the kubernetes cluster."),(0,a.kt)("p",null,"Beside advanced installation options, there are two ways of installing Epinio:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/next/installation/wildcardDNS_setup"},"Installation using a Wildcard DNS Service"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"For test environments. This should work on nearly any kubernetes distribution. Epinio will try to automatically create a magic wildcard DNS domain, e.g. ",(0,a.kt)("strong",{parentName:"li"},"10.0.0.1.omg.howdoi.website"),".")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/next/installation/dns_setup"},"DNS setup"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"For test and production environments. You will define a system domain, e.g. ",(0,a.kt)("strong",{parentName:"li"},"test.example.com"),".")),(0,a.kt)("p",null,"Then, continue with the ",(0,a.kt)("a",{parentName:"p",href:"/next/installation/install_epinio"},"Epinio installation process"),"."))}m.isMDXComponent=!0}}]);