"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[89417],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?i.createElement(f,a(a({ref:t},l),{},{components:n})):i.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},56141:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var i=n(83117),r=n(80102),o=(n(67294),n(3905)),a=["components"],s={title:"",sidebar_label:"Export Destination Registries"},p="Customization point: Export Destination Registries",c={unversionedId:"references/customization/export_registries",id:"version-1.10.0/references/customization/export_registries",title:"",description:"Epinio uses Export Destination Registries (short: EDR) as targets for the `app export",source:"@site/versioned_docs/version-1.10.0/references/customization/export_registries.md",sourceDirName:"references/customization",slug:"/references/customization/export_registries",permalink:"/1.10.0/references/customization/export_registries",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.10.0/references/customization/export_registries.md",tags:[],version:"1.10.0",frontMatter:{title:"",sidebar_label:"Export Destination Registries"},sidebar:"docs",previous:{title:"Service Catalog",permalink:"/1.10.0/references/customization/catalog"},next:{title:"Image Storage",permalink:"/1.10.0/references/customization/images"}},l={},u=[{value:"Definition",id:"definition",level:2},{value:"Example authentication secret, without certificate secret",id:"example-authentication-secret-without-certificate-secret",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"customization-point-export-destination-registries"},"Customization point: Export Destination Registries"),(0,o.kt)("p",null,"Epinio uses ",(0,o.kt)("inlineCode",{parentName:"p"},"Export Destination Registries")," (short: ",(0,o.kt)("inlineCode",{parentName:"p"},"EDR"),") as targets for the ",(0,o.kt)("inlineCode",{parentName:"p"},"app export\n--registry")," command. With this command a users is able to export an active application to one of the\navailable registries, as a pair of helm chart and linked container image."),(0,o.kt)("p",null,"An installation of Epinio does not provide any kind of standard destinations."),(0,o.kt)("p",null,"If EDR's are desired or needed please follow the instructions on\n",(0,o.kt)("a",{parentName:"p",href:"/1.10.0/howtos/customization/setup_export_registry"},"How to create export destination registries"),"\nand\n",(0,o.kt)("a",{parentName:"p",href:"/1.10.0/howtos/customization/export_to_oci_registries"},"How to export applications to an OCI registry")),(0,o.kt)("p",null,"The remainder of this document contains the definition of EDRs."),(0,o.kt)("h2",{id:"definition"},"Definition"),(0,o.kt)("p",null,"An EDR is defined by one or two kubernetes secrets, to be placed into the kubernestes cluster by the\nEpinio ",(0,o.kt)("strong",{parentName:"p"},"operator"),"."),(0,o.kt)("p",null,"All secrets have to be placed into Epinio's system namespace.\nThis namespace is usually named ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"authentication secret")," is labeled with ",(0,o.kt)("inlineCode",{parentName:"p"},'epinio.io/api-export-registry: "true"')," and has to\ncontain a stringData key ",(0,o.kt)("inlineCode",{parentName:"p"},".dockerconfigjson"),". The value for this key is a string in JSON format:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'stringData:\n  # certs: "<name of cert secret here>"\n  .dockerconfigjson: |-\n    {\n      "auths": {\n        "(set registry host here)": {\n          "auth":"(set base64 encoded string of (user:password) here)",\n          "username":"(set the user name here)",\n          "password":"(set the password here)"\n        }\n      }\n    }\n')),(0,o.kt)("p",null,"The name of the authentication secret is the symbolic name of the destination. It will be listed by\n",(0,o.kt)("inlineCode",{parentName:"p"},"epinio export-registries")," and becomes a suitable value for the ",(0,o.kt)("inlineCode",{parentName:"p"},"--registry")," flag of ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio app\nexport"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"epinio.io/registry-namespace")," annotation provides Epinio with the name of the\nnamespace/organization in the registry to place uploaded charts and images into."),(0,o.kt)("p",null,"If the authentication secret contains the optional key ",(0,o.kt)("inlineCode",{parentName:"p"},"certs")," (as sibling to ",(0,o.kt)("inlineCode",{parentName:"p"},".dockerconfigjson"),")\nthen the value of that key is the name of the ",(0,o.kt)("inlineCode",{parentName:"p"},"certificate secret"),". This secret has to contain a key\n",(0,o.kt)("inlineCode",{parentName:"p"},"tls.crt")," whose value is a PEM-formatted string containing the set of additional secrets required to\nsecurely talk to the destination registry."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The type of the authentication secret does not matter to Epinio.\nThe examples use the generic type ",(0,o.kt)("inlineCode",{parentName:"p"},"Opaque"),".")),(0,o.kt)("h2",{id:"example-authentication-secret-without-certificate-secret"},"Example authentication secret, without certificate secret"),(0,o.kt)("p",null,"Note the placeholders in brackets (",(0,o.kt)("inlineCode",{parentName:"p"},"<...>"),"). ",(0,o.kt)("inlineCode",{parentName:"p"},"auth")," is derived from the placeholders."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'---\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  annotations:\n    epinio.io/registry-namespace: "<registry-org>"\n  labels:\n    epinio.io/api-export-registry: "true"\n  name: "<destination-name>"\n  namespace: epinio\nstringData:\n  # certs: "<name of cert secret here>"\n  .dockerconfigjson: |-\n    {\n      "auths": {\n        "registry.hub.docker.com": {\n          "auth":"PHVzZXI+OjxwYXNzd29yZD4=",\n          "username":"<user>",\n          "password":"<password>"\n        }\n      }\n    }\n')))}m.isMDXComponent=!0}}]);