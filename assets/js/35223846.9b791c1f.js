"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[78796],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),f=l(t),d=o,g=f["".concat(p,".").concat(d)]||f[d]||u[d]||i;return t?n.createElement(g,s(s({ref:r},c),{},{components:t})):n.createElement(g,s({ref:r},c))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=f;var a={};for(var p in r)hasOwnProperty.call(r,p)&&(a[p]=r[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var l=2;l<i;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},20551:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u}});var n=t(83117),o=t(80102),i=(t(67294),t(3905)),s=["components"],a={sidebar_label:"Separating Application Ingress From Epinio API Server Ingress",sidebar_position:9,title:""},p="How to separate the application's ingress from the epinio server ingress",l={unversionedId:"howtos/separate_workload_ingress",id:"version-1.7.1/howtos/separate_workload_ingress",title:"",description:"By default applications deployed through Epinio share their ingress class with Epinio's API server.",source:"@site/versioned_docs/version-1.7.1/howtos/separate_workload_ingress.md",sourceDirName:"howtos",slug:"/howtos/separate_workload_ingress",permalink:"/1.7.1/howtos/separate_workload_ingress",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.7.1/howtos/separate_workload_ingress.md",tags:[],version:"1.7.1",sidebarPosition:9,frontMatter:{sidebar_label:"Separating Application Ingress From Epinio API Server Ingress",sidebar_position:9,title:""},sidebar:"docs",previous:{title:"Setting Up An External Container Registry",permalink:"/1.7.1/howtos/setup_external_registry"},next:{title:"Setting Up Routing Secrets",permalink:"/1.7.1/howtos/setup_routing_secrets"}},c={},u=[{value:"References",id:"references",level:2}],f={toc:u};function d(e){var r=e.components,t=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-separate-the-applications-ingress-from-the-epinio-server-ingress"},"How to separate the application's ingress from the epinio server ingress"),(0,i.kt)("p",null,"By default applications deployed through Epinio share their ingress class with Epinio's API server."),(0,i.kt)("p",null,"In a situation where this kind of behaviour is not wanted the desired separation is achieved by\nsetting the helm template variable ",(0,i.kt)("inlineCode",{parentName:"p"},"server.ingressClassName")," to the name of the ingress class to use\nfor application ingress':"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"helm install \\\n  --set server.ingressClassName=nginx\n  ... (other options here) \\\n  epinio epinio/epinio\n")),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/1.7.1/references/customization/lb"},"Load Balancers"))))}d.isMDXComponent=!0}}]);