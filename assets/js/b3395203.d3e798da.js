"use strict";(self.webpackChunkepinio_docusaurus=self.webpackChunkepinio_docusaurus||[]).push([[81461],{3905:function(e,n,i){i.d(n,{Zo:function(){return u},kt:function(){return f}});var r=i(67294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function o(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,r)}return i}function c(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?o(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,r,t=function(e,n){if(null==e)return{};var i,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)i=o[r],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)i=o[r],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var p=r.createContext({}),a=function(e){var n=r.useContext(p),i=n;return e&&(i="function"==typeof e?e(n):c(c({},n),e)),i},u=function(e){var n=a(e.components);return r.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var i=e.components,t=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=a(i),f=t,m=d["".concat(p,".").concat(f)]||d[f]||l[f]||o;return i?r.createElement(m,c(c({ref:n},u),{},{components:i})):r.createElement(m,c({ref:n},u))}));function f(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=i.length,c=new Array(o);c[0]=d;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:t,c[1]=s;for(var a=2;a<o;a++)c[a]=i[a];return r.createElement.apply(null,c)}return r.createElement.apply(null,i)}d.displayName="MDXCreateElement"},74185:function(e,n,i){i.r(n),i.d(n,{assets:function(){return u},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return s},metadata:function(){return a},toc:function(){return l}});var r=i(83117),t=i(80102),o=(i(67294),i(3905)),c=["components"],s={sidebar_label:"epinio service unbind",title:"",description:"epinio service unbind",keywords:["epinio","kubernetes","epinio service unbind"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-service-unbind"],"doc-persona":["epinio-developer","epinio-operator"]},p=void 0,a={unversionedId:"references/commands/cli/service/epinio_service_unbind",id:"version-1.11.0/references/commands/cli/service/epinio_service_unbind",title:"",description:"epinio service unbind",source:"@site/versioned_docs/version-1.11.0/references/commands/cli/service/epinio_service_unbind.md",sourceDirName:"references/commands/cli/service",slug:"/references/commands/cli/service/epinio_service_unbind",permalink:"/references/commands/cli/service/epinio_service_unbind",draft:!1,editUrl:"https://github.com/epinio/docs/edit/main/versioned_docs/version-1.11.0/references/commands/cli/service/epinio_service_unbind.md",tags:[],version:"1.11.0",frontMatter:{sidebar_label:"epinio service unbind",title:"",description:"epinio service unbind",keywords:["epinio","kubernetes","epinio service unbind"],"doc-type":["reference"],"doc-topic":["epinio","reference","epinio-cli","epinio-service-unbind"],"doc-persona":["epinio-developer","epinio-operator"]},sidebar:"docs",previous:{title:"epinio service show",permalink:"/references/commands/cli/service/epinio_service_show"},next:{title:"epinio service update",permalink:"/references/commands/cli/service/epinio_service_update"}},u={},l=[{value:"epinio service unbind",id:"epinio-service-unbind",level:2},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],d={toc:l};function f(e){var n=e.components,i=(0,t.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"epinio-service-unbind"},"epinio service unbind"),(0,o.kt)("p",null,"Unbinds a service SERVICENAME from an Epinio app APPNAME"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"epinio service unbind SERVICENAME APPNAME [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help   help for unbind\n")),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -H, --header stringArray       Add custom header to every request executed\n  -c, --kubeconfig string        (KUBECONFIG) path to a kubeconfig, not required in-cluster\n      --no-colors                Suppress colorized output\n      --settings-file string     (EPINIO_SETTINGS) set path of settings file (default "~/.config/epinio/settings.yaml")\n      --skip-ssl-verification    (SKIP_SSL_VERIFICATION) Skip the verification of TLS certificates\n      --timeout-multiplier int   (EPINIO_TIMEOUT_MULTIPLIER) Multiply timeouts by this factor (default 1)\n      --trace-file string        (TRACE_FILE) Print trace messages to the specified file\n      --trace-level int          (TRACE_LEVEL) Only print trace messages at or above this level (0 to 255, default 0, print nothing)\n      --trace-output string      (TRACE_OUTPUT) Sets trace output format [text,json] (default "text")\n      --verbosity int            (VERBOSITY) Only print progress messages at or above this level (0 or 1, default 0)\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/references/commands/cli/service/epinio_service"},"epinio service"),"\t - Epinio service management")))}f.isMDXComponent=!0}}]);